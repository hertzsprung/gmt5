%!PS-Adobe-3.0
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612 792
%%Title: GMT v5.1.2_r13153 [64-bit] Document from pscontour
%%Creator: GMT5
%%For: pwessel
%%DocumentNeededResources: font Helvetica
%%CreationDate: Fri May 16 14:35:48 2014
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%Pages: 1
%%EndComments

%%BeginProlog
250 dict begin
/! {bind def} bind def
/# {load def}!
/A /setgray #
/B /setdash #
/C /setrgbcolor #
/D /rlineto #
/E {dup stringwidth pop}!
/F /fill #
/G /rmoveto #
/H /sethsbcolor #
/I /setpattern #
/K /setcmykcolor #
/L /lineto #
/M /moveto #
/N /newpath #
/P /closepath #
/R /rotate #
/S /stroke #
/T /translate #
/U /grestore #
/V /gsave #
/W /setlinewidth #
/Y {findfont exch scalefont setfont}!
/Z /show #
/FP {true charpath flattenpath}!
/MU {matrix setmatrix}!
/MS {/SMat matrix currentmatrix def}!
/MR {SMat setmatrix}!
/edef {exch def}!
/FS {/fc edef /fs {V fc F U} def}!
/FQ {/fs {} def}!
/O0 {/os {N} def}!
/O1 {/os {P S} def}!
/FO {fs os}!
/Sa {M MS dup 0 exch G 0.726542528 mul -72 R dup 0 D 4 {72 R dup 0 D -144 R dup 0 D} repeat pop MR FO}!
/Sb {M dup 0 D exch 0 exch D neg 0 D FO}!
/SB {MS T /BoxR edef /BoxW edef /BoxH edef BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Sc {N 3 -1 roll 0 360 arc FO}!
/Sd {M 4 {dup} repeat 0 G neg dup dup D exch D D FO}!
/Se {N MS T R scale 0 0 1 0 360 arc MR FO}!
/Sg {M MS 22.5 R dup 0 exch G -22.5 R 0.765366865 mul dup 0 D 6 {-45 R dup 0 D} repeat pop MR FO}!
/Sh {M MS dup 0 G -120 R dup 0 D 4 {-60 R dup 0 D} repeat pop MR FO}!
/Si {M MS dup neg 0 exch G 60 R 1.732050808 mul dup 0 D 120 R 0 D MR FO}!
/Sj {M MS R dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D MR FO}!
/Sn {M MS dup 0 exch G -36 R 1.175570505 mul dup 0 D 3 {-72 R dup 0 D} repeat pop MR FO}!
/Sp {N 3 -1 roll 0 360 arc fs N}!
/SP {M {D} repeat FO}!
/Sr {M dup -2 div 2 index -2 div G dup 0 D exch 0 exch D neg 0 D FO}!
/SR {MS T /BoxR edef /BoxW edef /BoxH edef BoxR BoxW -2 div BoxH -2 div T BoxR 0 M
  BoxW 0 BoxW BoxH BoxR arct BoxW BoxH 0 BoxH BoxR arct 0 BoxH 0 0 BoxR arct 0 0 BoxW 0 BoxR arct MR FO}!
/Ss {M 1.414213562 mul dup dup dup -2 div dup G 0 D 0 exch D neg 0 D FO}!
/St {M MS dup 0 exch G -60 R 1.732050808 mul dup 0 D -120 R 0 D MR FO}!
/SV {0 exch M 0 D D D D D 0 D FO}!
/Sv {0 0 M D D 0 D D D D D 0 D D FO}!
/Sw {2 copy M 5 2 roll arc FO}!
/Sx {M 1.414213562 mul 5 {dup} repeat -2 div dup G D neg 0 G neg D S}!
/Sy {M dup 0 exch G dup -2 mul dup 0 exch D S}!
/S+ {M dup 0 G dup -2 mul dup 0 D exch dup G 0 exch D S}!
/S- {M dup 0 G dup -2 mul dup 0 D S}!
/sw {stringwidth pop}!
/sh {V MU 0 0 M FP pathbbox N 4 1 roll pop pop pop U}!
/sd {V MU 0 0 M FP pathbbox N pop pop exch pop U}!
/sH {V MU 0 0 M FP pathbbox N exch pop exch sub exch pop U}!
/sb {E exch sh}!
/bl {}!
/bc {E -2 div 0 G}!
/br {E neg 0 G}!
/ml {dup 0 exch sh -2 div G}!
/mc {dup E -2 div exch sh -2 div G}!
/mr {dup E neg exch sh -2 div G}!
/tl {dup 0 exch sh neg G}!
/tc {dup E -2 div exch sh neg G}!
/tr {dup E neg exch sh neg G}!
/mx {2 copy lt {exch} if pop}!
/PSL_xorig 0 def /PSL_yorig 0 def
/TM {2 copy T PSL_yorig add /PSL_yorig edef PSL_xorig add /PSL_xorig edef}!
/PSL_reencode {findfont dup length dict begin
  {1 index /FID ne {def}{pop pop} ifelse} forall
  exch /Encoding edef currentdict end definefont pop
}!
/PSL_eps_begin {
  /PSL_eps_state save def
  /PSL_dict_count countdictstack def
  /PSL_op_count count 1 sub def
  userdict begin
  /showpage {} def
  0 setgray 0 setlinecap 1 setlinewidth
  0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  {pop languagelevel 1 ne {false setstrokeadjust false setoverprint} if} if
}!
/PSL_eps_end {
  count PSL_op_count sub {pop} repeat
  countdictstack PSL_dict_count sub {end} repeat
  PSL_eps_state restore
}!
/PSL_transp {
  /.setopacityalpha where {pop .setblendmode .setopacityalpha}{
  /pdfmark where {pop [ /BM exch /CA exch dup /ca exch /SetTransparency pdfmark}
  {pop pop} ifelse} ifelse
}!
/Standard+_Encoding [
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef	/.notdef
/.notdef	/threequarters	/threesuperior	/trademark	/twosuperior	/yacute		/ydieresis	/zcaron
/space		/exclam		/quotedbl	/numbersign	/dollar		/percent	/ampersand	/quoteright
/parenleft	/parenright	/asterisk	/plus		/comma		/hyphen		/period		/slash
/zero		/one		/two		/three		/four		/five		/six		/seven
/eight		/nine		/colon		/semicolon	/less		/equal		/greater	/question
/at		/A		/B		/C		/D		/E		/F		/G
/H		/I		/J		/K		/L		/M		/N		/O
/P		/Q		/R		/S		/T		/U		/V		/W
/X		/Y		/Z		/bracketleft	/backslash	/bracketright	/asciicircum	/underscore
/quoteleft	/a		/b		/c		/d		/e		/f		/g
/h		/i		/j		/k		/l		/m		/n		/o
/p		/q		/r		/s		/t		/u		/v		/w
/x		/y		/z		/braceleft	/bar		/braceright	/asciitilde	/florin
/Atilde		/Ccedilla	/Eth		/Lslash		/Ntilde		/Otilde		/Scaron		/Thorn
/Yacute		/Ydieresis	/Zcaron		/atilde		/brokenbar	/ccedilla	/copyright	/degree
/divide		/eth		/logicalnot	/lslash		/minus		/mu		/multiply	/ntilde
/onehalf	/onequarter	/onesuperior	/otilde		/plusminus	/registered	/scaron		/thorn
/.notdef	/exclamdown	/cent		/sterling	/fraction	/yen		/florin		/section
/currency	/quotesingle	/quotedblleft	/guillemotleft	/guilsinglleft	/guilsinglright	/fi		/fl
/Aacute		/endash		/dagger		/daggerdbl	/periodcentered	/Acircumflex	/paragraph	/bullet
/quotesinglbase	/quotedblbase	/quotedblright	/guillemotright	/ellipsis	/perthousand	/Adieresis	/questiondown
/Agrave		/grave		/acute		/circumflex	/tilde		/macron		/breve		/dotaccent
/dieresis	/Eacute		/ring		/cedilla	/Ecircumflex	/hungarumlaut	/ogonek		/caron
/emdash		/Edieresis	/Egrave		/Iacute		/Icircumflex	/Idieresis	/Igrave		/Oacute
/Ocircumflex	/Odieresis	/Ograve		/Uacute		/Ucircumflex	/Udieresis	/Ugrave		/aacute
/acircumflex	/AE		/adieresis	/ordfeminine	/agrave		/eacute		/ecircumflex	/edieresis
/egrave		/Oslash		/OE		/ordmasculine	/iacute		/icircumflex	/idieresis	/igrave
/oacute		/ae		/ocircumflex	/odieresis	/ograve		/dotlessi	/uacute		/ucircumflex
/udieresis	/oslash		/oe		/germandbls	/ugrave		/Aring		/aring		/ydieresis
] def
/PSL_font_encode 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 array astore def
/F0 {/Helvetica Y}!
/F1 {/Helvetica-Bold Y}!
/F2 {/Helvetica-Oblique Y}!
/F3 {/Helvetica-BoldOblique Y}!
/F4 {/Times-Roman Y}!
/F5 {/Times-Bold Y}!
/F6 {/Times-Italic Y}!
/F7 {/Times-BoldItalic Y}!
/F8 {/Courier Y}!
/F9 {/Courier-Bold Y}!
/F10 {/Courier-Oblique Y}!
/F11 {/Courier-BoldOblique Y}!
/F12 {/Symbol Y}!
/F13 {/AvantGarde-Book Y}!
/F14 {/AvantGarde-BookOblique Y}!
/F15 {/AvantGarde-Demi Y}!
/F16 {/AvantGarde-DemiOblique Y}!
/F17 {/Bookman-Demi Y}!
/F18 {/Bookman-DemiItalic Y}!
/F19 {/Bookman-Light Y}!
/F20 {/Bookman-LightItalic Y}!
/F21 {/Helvetica-Narrow Y}!
/F22 {/Helvetica-Narrow-Bold Y}!
/F23 {/Helvetica-Narrow-Oblique Y}!
/F24 {/Helvetica-Narrow-BoldOblique Y}!
/F25 {/NewCenturySchlbk-Roman Y}!
/F26 {/NewCenturySchlbk-Italic Y}!
/F27 {/NewCenturySchlbk-Bold Y}!
/F28 {/NewCenturySchlbk-BoldItalic Y}!
/F29 {/Palatino-Roman Y}!
/F30 {/Palatino-Italic Y}!
/F31 {/Palatino-Bold Y}!
/F32 {/Palatino-BoldItalic Y}!
/F33 {/ZapfChancery-MediumItalic Y}!
/F34 {/ZapfDingbats Y}!
/F35 {/Ryumin-Light-EUC-H Y}!
/F36 {/Ryumin-Light-EUC-V Y}!
/F37 {/GothicBBB-Medium-EUC-H Y}!
/F38 {/GothicBBB-Medium-EUC-V Y}!
/PSL_pathtextdict 26 dict def
/PSL_pathtext
  {PSL_pathtextdict begin
    /textheight exch def
    /just exch def
    /offset exch def
    /str exch def
    /pathdist 0 def
    /setdist offset def
    /charcount 0 def
    /justy just 4 idiv textheight mul 2 div neg def
    V flattenpath
	{movetoproc} {linetoproc}
	{curvetoproc} {closepathproc}
	pathforall
    U N
    end
  } def
PSL_pathtextdict begin
/movetoproc
  { /newy exch def /newx exch def
    /firstx newx def /firsty newy def
    /ovr 0 def
    newx newy transform
    /cpy exch def /cpx exch def
  } def
/linetoproc
  { /oldx newx def /oldy newy def
    /newy exch def /newx exch def
    /dx newx oldx sub def
    /dy newy oldy sub def
    /dist dx dup mul dy dup mul add sqrt def
    dist 0 ne
    { /dsx dx dist div ovr mul def
      /dsy dy dist div ovr mul def
      oldx dsx add oldy dsy add transform
      /cpy exch def /cpx exch def
      /pathdist pathdist dist add def
      {setdist pathdist le
	  {charcount str length lt
	      {setchar} {exit} ifelse}
	  { /ovr setdist pathdist sub def
	    exit}
	  ifelse
      } loop
    } if
  } def
/curvetoproc
  { (ERROR: No curveto's after flattenpath!)
    print
  } def
/closepathproc
  {firstx firsty linetoproc
    firstx firsty movetoproc
  } def
/setchar
  { /char str charcount 1 getinterval def
    /charcount charcount 1 add def
    /charwidth char stringwidth pop def
    V cpx cpy itransform T
      dy dx atan R
      0 justy M
      char show
      0 justy neg G
      currentpoint transform
      /cpy exch def /cpx exch def
    U /setdist setdist charwidth add def
  } def
end
/PSL_set_label_heights
{
  /PSL_n_labels_minus_1 PSL_n_labels 1 sub def
  /PSL_heights PSL_n_labels array def
  0 1 PSL_n_labels_minus_1
  { /psl_k exch def
    /psl_label PSL_label_str psl_k get def
    PSL_label_font psl_k get cvx exec
    psl_label sH /PSL_height edef
    PSL_heights psl_k PSL_height put
  } for
} def
%%%%%%%%%%%%%%%%%%% CURVED BASELINE TEXT PLACEMENT FUNCTIONS
/PSL_curved_path_labels
{ /psl_bits exch def
  /PSL_placetext psl_bits 2 and 2 eq def
  /PSL_clippath psl_bits 4 and 4 eq def
  /PSL_strokeline false def
  /PSL_fillbox psl_bits 128 and 128 eq def
  /PSL_drawbox psl_bits 256 and 256 eq def
  /PSL_n_paths1 PSL_n_paths 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  PSL_clippath {clipsave N clippath} if
  /psl_k 0 def
  /psl_p 0 def
  0 1 PSL_n_paths1
  { /psl_kk exch def
    /PSL_n PSL_path_n  psl_kk get def
    /PSL_m PSL_label_n psl_kk get def
    /PSL_x PSL_path_x psl_k PSL_n getinterval def
    /PSL_y PSL_path_y psl_k PSL_n getinterval def
    /PSL_node PSL_label_node psl_p PSL_m getinterval def
    /PSL_angle PSL_label_angle psl_p PSL_m getinterval def
    /PSL_str PSL_label_str psl_p PSL_m getinterval def
    /PSL_fnt PSL_label_font psl_p PSL_m getinterval def
    PSL_curved_path_label
    /psl_k psl_k PSL_n add def
    /psl_p psl_p PSL_m add def
  } for
  PSL_clippath {PSL_clip} if N
} def
/PSL_curved_path_label
{
  /PSL_n1 PSL_n 1 sub def
  /PSL_m1 PSL_m 1 sub def
  PSL_CT_calcstringwidth
  PSL_CT_calclinedist
  PSL_CT_addcutpoints
  /PSL_nn1 PSL_nn 1 sub def
  /n 0 def
  /k 0 def
  /j 0 def
  /PSL_seg 0 def
  /PSL_xp PSL_nn array def
  /PSL_yp PSL_nn array def
  PSL_xp 0 PSL_xx 0 get put
  PSL_yp 0 PSL_yy 0 get put
  1 1 PSL_nn1
  { /i exch def
    /node_type PSL_kind i get def
    /j j 1 add def
    PSL_xp j PSL_xx i get put
    PSL_yp j PSL_yy i get put
    node_type 1 eq
    {n 0 eq
      {PSL_CT_drawline}
      {	PSL_CT_reversepath
	PSL_CT_textline} ifelse
      /j 0 def
      PSL_xp j PSL_xx i get put
      PSL_yp j PSL_yy i get put
    } if
  } for
  n 0 eq {PSL_CT_drawline} if
} def
/PSL_CT_textline
{ PSL_fnt k get cvx exec
  /PSL_height PSL_heights k get def
  PSL_placetext	{PSL_CT_placelabel} if
  PSL_clippath {PSL_CT_clippath} if
  /n 0 def /k k 1 add def
} def
/PSL_CT_calcstringwidth
{ /PSL_width PSL_m array def
  0 1 PSL_m1
  { /i exch def
    PSL_fnt i get cvx exec
    PSL_width i PSL_str i get stringwidth pop put
  } for
} def
/PSL_CT_calclinedist
{ /PSL_newx PSL_x 0 get def
  /PSL_newy PSL_y 0 get def
  /dist 0.0 def
  /PSL_dist PSL_n array def
  PSL_dist 0 0.0 put
  1 1 PSL_n1
  { /i exch def
    /PSL_oldx PSL_newx def
    /PSL_oldy PSL_newy def
    /PSL_newx PSL_x i get def
    /PSL_newy PSL_y i get def
    /dx PSL_newx PSL_oldx sub def
    /dy PSL_newy PSL_oldy sub def
    /dist dist dx dx mul dy dy mul add sqrt add def
    PSL_dist i dist put
  } for
} def
/PSL_CT_addcutpoints
{ /k 0 def
  /PSL_nc PSL_m 2 mul 1 add def
  /PSL_cuts PSL_nc array def
  /PSL_nc1 PSL_nc 1 sub def
  0 1 PSL_m1
  { /i exch def
    /dist PSL_dist PSL_node i get get def
    /halfwidth PSL_width i get 2 div PSL_gap_x add def
    PSL_cuts k dist halfwidth sub put
    /k k 1 add def
    PSL_cuts k dist halfwidth add put
    /k k 1 add def
  } for
  PSL_cuts k 100000.0 put
  /PSL_nn PSL_n PSL_m 2 mul add def
  /PSL_xx PSL_nn array def
  /PSL_yy PSL_nn array def
  /PSL_kind PSL_nn array def
  /j 0 def
  /k 0 def
  /dist 0.0 def
  0 1 PSL_n1
  { /i exch def
    /last_dist dist def
    /dist PSL_dist i get def
    k 1 PSL_nc1
    { /kk exch def
      /this_cut PSL_cuts kk get def
      dist this_cut gt
      { /ds dist last_dist sub def
	/f ds 0.0 eq {0.0} {dist this_cut sub ds div} ifelse def
	/i1 i 0 eq {0} {i 1 sub} ifelse def
	PSL_xx j PSL_x i get dup PSL_x i1 get sub f mul sub put
	PSL_yy j PSL_y i get dup PSL_y i1 get sub f mul sub put
	PSL_kind j 1 put
	/j j 1 add def
	/k k 1 add def
      } if
    } for
    dist PSL_cuts k get le
    {PSL_xx j PSL_x i get put PSL_yy j PSL_y i get put
      PSL_kind j 0 put
      /j j 1 add def
    } if
  } for
} def
/PSL_CT_reversepath
{PSL_xp j get PSL_xp 0 get lt
  {0 1 j 2 idiv
    { /left exch def
      /right j left sub def
      /tmp PSL_xp left get def
      PSL_xp left PSL_xp right get put
      PSL_xp right tmp put
      /tmp PSL_yp left get def
      PSL_yp left PSL_yp right get put
      PSL_yp right tmp put
    } for
  } if
} def
/PSL_CT_placelabel
{
  /PSL_just PSL_label_justify k get def
  /PSL_height PSL_heights k get def
  PSL_usebox
  {PSL_CT_clippath
    PSL_fillbox
    {V PSL_setboxrgb fill U} if
    PSL_drawbox
    {V PSL_setboxpen S U} if N
  } if
  PSL_CT_placeline PSL_str k get PSL_gap_x PSL_just PSL_height PSL_pathtext
} def
/PSL_CT_clippath
{
  /H PSL_height 2 div PSL_gap_y add def
  /xoff j 1 add array def
  /yoff j 1 add array def
  /angle 0 def
  0 1 j {
    /ii exch def
    /x PSL_xp ii get def
    /y PSL_yp ii get def
    ii 0 eq {
      /x1 PSL_xp 1 get def
      /y1 PSL_yp 1 get def
      /dx x1 x sub def
      /dy y1 y sub def
    }
    { /i1 ii 1 sub def
      /x1 PSL_xp i1 get def
      /y1 PSL_yp i1 get def
      /dx x x1 sub def
      /dy y y1 sub def
    } ifelse
    dx 0.0 ne dy 0.0 ne and
    { /angle dy dx atan 90 add def} if
    /sina angle sin def
    /cosa angle cos def
    xoff ii H cosa mul put
    yoff ii H sina mul put
  } for
  PSL_xp 0 get xoff 0 get add PSL_yp 0 get yoff 0 get add M
  1 1 j {
    /ii exch def
    PSL_xp ii get xoff ii get add PSL_yp ii get yoff ii get add L
  } for
  j -1 0 {
    /ii exch def
    PSL_xp ii get xoff ii get sub PSL_yp ii get yoff ii get sub L
  } for P
} def
/PSL_CT_drawline
{
  /str 20 string def
  PSL_strokeline
  {PSL_CT_placeline S} if
  /PSL_seg PSL_seg 1 add def
  /n 1 def
} def
/PSL_CT_placeline
{PSL_xp 0 get PSL_yp 0 get M
  1 1 j { /ii exch def PSL_xp ii get PSL_yp ii get L} for
} def
%%%%%%%%%%%%%%%%%%% DRAW BASELINE TEXT SEGMENT LINES
/PSL_draw_path_lines
{
  /PSL_n_paths1 PSL_n_paths 1 sub def
  V
  /psl_start 0 def
  0 1 PSL_n_paths1
  { /psl_k exch def
    /PSL_n PSL_path_n psl_k get def
    /PSL_n1 PSL_n 1 sub def
    PSL_path_pen psl_k get cvx exec
    N
    PSL_path_x psl_start get PSL_path_y psl_start get M
    1 1 PSL_n1
    { /psl_i exch def
      /psl_kk psl_i psl_start add def
      PSL_path_x psl_kk get PSL_path_y psl_kk get L
    } for
    S
    /psl_start psl_start PSL_n add def
  } for
  U
} def
%%%%%%%%%%%%%%%%%%% STRAIGHT BASELINE TEXT PLACEMENT FUNCTIONS
/PSL_straight_path_labels
{
  /psl_bits exch def
  /PSL_placetext psl_bits 2 and 2 eq def
  /PSL_rounded psl_bits 32 and 32 eq def
  /PSL_fillbox psl_bits 128 and 128 eq def
  /PSL_drawbox psl_bits 256 and 256 eq def
  /PSL_n_labels_minus_1 PSL_n_labels 1 sub def
  /PSL_usebox PSL_fillbox PSL_drawbox or def
  0 1 PSL_n_labels_minus_1
  { /psl_k exch def
    PSL_ST_prepare_text
    PSL_usebox
    {  PSL_rounded
        {PSL_ST_textbox_rect}
        {PSL_ST_textbox_round}
      ifelse
      PSL_fillbox {V PSL_setboxrgb fill U} if
      PSL_drawbox {V PSL_setboxpen S U} if
      N
    } if
    PSL_placetext {PSL_ST_place_label} if
  } for
} def
/PSL_straight_path_clip
{
  /psl_bits exch def
  /PSL_rounded psl_bits 32 and 32 eq def
  /PSL_n_labels_minus_1 PSL_n_labels 1 sub def
  N clipsave clippath
  0 1 PSL_n_labels_minus_1
  { /psl_k exch def
    PSL_ST_prepare_text
    PSL_rounded
      {PSL_ST_textbox_round}
      {PSL_ST_textbox_rect}
    ifelse
  } for
  PSL_clip
} def
/PSL_ST_prepare_text
{
  /psl_xp PSL_txt_x psl_k get def
  /psl_yp PSL_txt_y psl_k get def
  /psl_label PSL_label_str psl_k get def
  PSL_label_font psl_k get cvx exec
  /PSL_height PSL_heights psl_k get def
  /psl_boxH PSL_height PSL_gap_y 2 mul add def
  /PSL_just PSL_label_justify psl_k get def
  /PSL_justx PSL_just 4 mod 1 sub 2 div neg def
  /PSL_justy PSL_just 4 idiv 2 div neg def
  /psl_SW psl_label stringwidth pop def
  /psl_boxW psl_SW PSL_gap_x 2 mul add def
  /psl_x0 psl_SW PSL_justx mul def
  /psl_y0 PSL_justy PSL_height mul def
  /psl_angle PSL_label_angle psl_k get def
} def
/PSL_ST_textbox_rect
{
  psl_xp psl_yp T psl_angle R psl_x0 psl_y0 T
  PSL_gap_x neg PSL_gap_y neg M
  0 psl_boxH D psl_boxW 0 D 0 psl_boxH neg D P
  psl_x0 neg psl_y0 neg T psl_angle neg R psl_xp neg psl_yp neg T
} def
/PSL_ST_textbox_round
{
  /psl_BoxR PSL_gap_x PSL_gap_y lt {PSL_gap_x} {PSL_gap_y} ifelse def
  /psl_xd PSL_gap_x psl_BoxR sub def
  /psl_yd PSL_gap_y psl_BoxR sub def
  /psl_xL PSL_gap_x neg def
  /psl_yB PSL_gap_y neg def
  /psl_yT psl_boxH psl_yB add def
  /psl_H2 PSL_height psl_yd 2 mul add def
  /psl_W2 psl_SW psl_xd 2 mul add def
  /psl_xR psl_xL psl_boxW add def
  /psl_x0 psl_SW PSL_justx mul def
  psl_xp psl_yp T psl_angle R psl_x0 psl_y0 T
  psl_xL psl_yd M
  psl_xL psl_yT psl_xR psl_yT psl_BoxR arct psl_W2 0 D
  psl_xR psl_yT psl_xR psl_yB psl_BoxR arct 0 psl_H2 neg D
  psl_xR psl_yB psl_xL psl_yB psl_BoxR arct psl_W2 neg 0 D
  psl_xL psl_yB psl_xL psl_yd psl_BoxR arct P
  psl_x0 neg psl_y0 neg T psl_angle neg R psl_xp neg psl_yp neg T
} def
/PSL_ST_place_label
{
    V psl_xp psl_yp T psl_angle R
    psl_SW PSL_justx mul psl_y0 M
    psl_label dup sd neg 0 exch G show
    U
} def
/PSL_nclip 0 def
/PSL_clip {clip /PSL_nclip PSL_nclip 1 add def} def
/PSL_eoclip {eoclip /PSL_nclip PSL_nclip 1 add def} def
/PSL_cliprestore {cliprestore /PSL_nclip PSL_nclip 1 sub def} def
%%EndProlog

%%BeginSetup
/PSLevel /languagelevel where {pop languagelevel} {1} ifelse def
PSLevel 1 gt { << /PageSize [612 792] /ImagingBBox null >> setpagedevice } if
%%EndSetup

%%Page: 1 1

%%BeginPageSetup
V 0.06 0.06 scale
%%EndPageSetup

/PSL_page_xsize 10200 def
/PSL_page_ysize 13200 def
0 A
FQ
O0
1200 1200 TM

% PostScript produced by:
%%GMT: pscontour -R0/10/0/10 -A20+e+c0.05i+f24p -C10 tmp.xyz -JX6i -P -K -W0.5p
%%PROJ: xy 0.00000000 10.00000000 0.00000000 10.00000000 0.000 10.000 0.000 10.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_1
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
clipsave
0 0 M
7200 0 D
0 7200 D
-7200 0 D
PSL_clip N
PSL_font_encode 0 get 0 eq {Standard+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
/PSL_setboxpen {4 W 0 A [] 0 B} def
/PSL_setboxrgb {1 A} def
/PSL_path_pen [
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
	(8 W 0 A [] 0 B)
] def
/PSL_label_justify [ 6 6 ] def
/PSL_label_font [
	(0 A 400 F0)
	(0 A 400 F0)
] def
/PSL_gap_x 60 def
/PSL_gap_y 60 def
/PSL_path_x [ 7200 7200 7128 7120 7056 7039 6984 6959 6912 6878 
	6840 6809 6768 6716 6696 6635 6624 6616 6552 6545 
	6480 6471 6408 6388 6336 6306 6264 6232 6192 6168 
	6120 6056 6048 6000 5979 5976 5916 5904 5853 5832 
	5791 5760 5729 5688 5667 5616 5605 5544 5543 5538 
	5472 5458 5400 5370 5328 5282 5256 5194 5184 5143 
	5112 5104 5040 5014 4968 4923 4896 4831 4824 4800 
	4761 4752 4738 4680 4643 4608 4586 4536 4500 4464 
	4451 4392 4357 4320 4253 4248 4235 4176 4151 4104 
	4047 4032 4000 3970 3960 3916 3888 3862 3816 3789 
	3744 3703 3672 3600 3600 3600 3528 3477 3456 3429 
	3384 3348 3312 3299 3273 3240 3202 3168 3130 3096 
	3054 3024 3000 2969 2952 2924 2880 2880 2880 2808 
	2769 2736 2667 2665 2664 2656 2592 2571 2542 2520 
	2483 2448 2400 2376 2323 2313 2304 2250 2232 2182 
	2160 2118 2088 2071 2057 2038 2016 2000 1952 1946 
	1945 1944 1915 1895 1872 1856 1846 1800 1800 1756 
	1728 1714 1693 1674 1656 1636 1617 1600 1584 1565 
	1549 1532 1512 1500 1491 1469 1461 1440 1440 1440 
	1440 1412 1395 1385 1368 1358 1354 1333 1316 1309 
	1296 1288 1286 1281 1263 1249 1241 1224 1220 1219 
	1200 1191 1180 1165 1161 1159 1152 1145 1143 1140 
	1125 1117 1108 1102 1091 1089 1080 1075 1073 1059 
	1050 1043 1037 1029 1016 1014 1008 1000 998 986 
	982 973 967 960 950 947 936 935 935 923 
	921 911 907 900 894 889 881 878 868 867 
	864 857 849 847 845 837 833 828 823 818 
	812 809 801 800 799 792 791 791 783 781 
	774 768 766 763 758 754 750 745 742 737 
	735 728 727 720 720 1800 1800 1440 1440 1455 
	1458 1469 1477 1485 1497 1500 1512 1516 1528 1532 
	1538 1548 1560 1565 1582 1582 1584 1600 1605 1618 
	1630 1636 1640 1655 1656 1674 1682 1694 1709 1714 
	1728 1735 1738 1756 1768 1778 1800 1800 1817 1823 
	1835 1846 1869 1870 1872 1895 1907 1920 1944 1946 
	1947 1973 1990 2000 2016 2028 2037 2057 2086 2087 
	2087 2088 2109 2118 2141 2149 2160 2182 2201 2215 
	2232 2250 2268 2286 2292 2304 2316 2323 2344 2361 
	2376 2400 2431 2441 2448 2470 2483 2520 2526 2537 
	2571 2579 2592 2618 2664 2667 2673 2717 2736 2755 
	2769 2808 2824 2880 2880 2880 2880 2912 2939 2952 
	3000 3011 3024 3064 3096 3130 3168 3200 3240 3273 
	3293 3312 3330 3349 3384 3429 3456 3482 3496 3512 
	3521 3528 3600 3600 3672 3681 3692 3722 3744 3789 
	3816 3847 3888 3890 3892 3960 4000 4032 4087 4104 
	4108 4114 4153 4176 4198 4235 4248 4265 4320 4364 
	4392 4424 4464 4500 4524 4536 4572 4608 4620 4645 
	4680 4711 4752 4800 4824 4843 4896 4966 4968 4970 
	5040 5091 5112 5143 5172 5184 5210 5256 5325 5328 
	5329 5333 5400 5437 5472 5538 5543 5544 5596 5616 
	5651 5688 5705 5760 5832 5864 5904 5966 5976 6000 
	6048 6067 6120 6150 6192 6261 6264 6265 6336 6378 
	6408 6459 6480 6545 6552 6609 6624 6648 6696 6742 
	6768 6784 6840 6843 6857 6912 6927 6984 7019 7056 
	7110 7128 7200 7200 5760 5760 5760 3600 3600 1800 
	1800 7200 7200 7145 7128 7096 7056 6992 6984 6968 
	6925 6912 6871 6840 6777 6768 6750 6696 6667 6624 
	6556 6552 6545 6480 6441 6408 6353 6336 6289 6264 
	6206 6192 6171 6120 6083 6048 6000 5976 5957 5904 
	5838 5834 5832 5784 5760 5735 5688 5687 5684 5616 
	5550 5544 5542 5538 5494 5472 5400 5353 5328 5268 
	5256 5240 5184 5143 5112 5066 5040 5023 4968 4909 
	4896 4857 4824 4814 4800 4752 4729 4696 4680 4640 
	4608 4596 4561 4536 4500 4464 4408 4392 4320 4320 
	4281 4248 4242 4235 4176 4154 4104 4075 4032 4000 
	3960 3927 3888 3857 3837 3816 3802 3789 3744 3724 
	3672 3661 3600 3600 3600 3541 3528 3503 3484 3456 
	3429 3384 3375 3352 3323 3312 3273 3240 3230 3224 
	3193 3176 3173 3168 3130 3096 3086 3070 3042 3024 
	3000 2968 2959 2952 2919 2905 2880 2880 2842 2808 
	2805 2782 2769 2736 2734 2733 2700 2669 2667 2664 
	2643 2634 2611 2602 2592 2571 2557 2541 2520 2512 
	2506 2483 2473 2455 2448 2427 2415 2400 2393 2376 
	2374 2372 2348 2333 2323 2304 2298 2281 2274 2263 
	2250 2232 2227 2224 2204 2192 2182 2160 2160 5400 
	5400 5400 4320 4320 2880 2880 2880 7200 7200 7149 
	7128 7078 7056 7024 6984 6954 6912 6857 6840 6826 
	6768 6698 6696 6695 6624 6558 6552 6545 6501 6480 
	6453 6408 6405 6400 6357 6336 6267 6264 6261 6192 
	6128 6123 6120 6110 6048 6000 5976 5939 5904 5878 
	5832 5760 5760 5716 5688 5672 5647 5616 5555 5544 
	5538 5472 5434 5400 5372 5333 5328 5313 5256 5236 
	5184 5143 5126 5112 5053 5040 5006 4968 4966 4896 
	4881 4851 4824 4813 4800 4752 4721 4680 4645 4608 
	4571 4554 4536 4500 4464 4431 4412 4392 4364 4320 
	4299 4248 4235 4208 4176 4174 4164 4114 4104 4077 
	4056 4032 4000 3960 3945 3903 3892 3888 3840 3830 
	3816 3800 3789 3744 3740 3733 3692 3672 3656 3646 
	3628 3600 3600 3556 3545 3528 3512 3490 3470 3456 
	3429 3412 3388 3387 3384 3349 3312 3310 3286 3273 
	3240 3236 3232 3200 3168 3165 3162 3130 3097 3097 
	3096 3064 3051 3032 3024 3000 2982 2969 2964 2952 
	2943 2939 2921 2909 2880 2880 3600 3600 5760 5760 
	3600 3600 3636 3648 3672 3673 3675 3711 3744 3750 
	3757 3789 3816 3830 3851 3871 3888 3913 3950 3956 
	3958 3960 3985 4000 4032 4045 4068 4091 4096 4104 
	4124 4138 4176 4186 4208 4235 4240 4248 4286 4320 
	4337 4385 4390 4391 4392 4422 4444 4464 4500 4536 
	4557 4608 4615 4645 4675 4680 4737 4752 4800 4811 
	4824 4845 4865 4896 4932 4968 4984 5000 5020 5040 
	5055 5070 5112 5143 5184 5217 5237 5256 5274 5294 
	5328 5373 5400 5455 5472 5538 5544 5572 5616 5625 
	5660 5688 5700 5714 5760 5806 5832 5902 5904 5911 
	5976 6000 6028 6048 6102 6120 6160 6192 6207 6264 
	6316 6336 6372 6408 6429 6480 6545 6552 6562 6624 
	6667 6696 6731 6768 6792 6840 6899 6912 6923 6984 
	7053 7056 7057 7059 7104 7128 7200 7200 7200 7200 
	7200 7128 7082 7056 7012 6984 6968 6912 6857 6847 
	6840 6804 6768 6761 6750 6696 6646 6624 6569 6552 
	6545 6480 6448 6408 6384 6353 6336 6275 6264 6261 
	6222 6192 6183 6171 6120 6085 6048 6000 5976 5918 
	5910 5904 5838 5832 5760 5760 5760 5760 5688 5684 
	5649 5616 5613 5610 5544 5538 5472 5468 5435 5400 
	5400 5333 5328 5268 5256 5205 5184 5143 5112 5096 
	5082 5040 5023 4968 4966 4935 4909 4896 4854 4824 
	4800 4752 4747 4735 4696 4680 4645 4608 4596 4572 
	4547 4536 4514 4500 4464 4454 4436 4408 4392 4364 
	4320 4320 5400 5400 7200 7200 7200 7128 7099 7056 
	7000 6984 6949 6912 6909 6904 6840 6827 6811 6768 
	6720 6707 6696 6667 6632 6624 6586 6552 6545 6480 
	6462 6433 6408 6380 6336 6300 6264 6222 6207 6192 
	6170 6146 6120 6072 6048 6024 6000 5976 5929 5917 
	5904 5882 5860 5847 5832 5793 5760 5727 5709 5688 
	5675 5663 5616 5607 5600 5544 5538 5510 5478 5472 
	5443 5419 5400 5362 5328 5305 5256 5250 5232 5196 
	5191 5184 5143 5112 5091 5040 5040 7200 7200 7128 
	7111 7056 7024 7002 6984 6963 6940 6925 6912 6857 
	6840 6776 6772 6768 6698 6696 6672 6624 6622 6621 
	6552 6545 6512 6480 6476 6472 6408 6404 6400 6336 
	6330 6264 6261 6216 6194 6192 6128 6124 6120 6090 
	6063 6048 6000 5976 5938 5922 5904 5890 5878 5857 
	5832 5818 5760 5760 7200 7200 7128 7121 7087 7056 
	7043 6984 6968 6912 6894 6867 6840 6821 6768 6750 
	6696 6680 6624 6618 6612 6583 6552 6545 6480 6480 
	7200 7200 ] def
/PSL_path_y [ 720 720 727 728 735 737 742 745 750 754 
	758 761 766 772 774 781 783 784 791 792 
	800 801 809 812 818 822 828 832 837 840 
	847 856 857 864 867 867 876 878 885 889 
	895 900 905 911 915 923 925 935 935 936 
	947 950 960 966 973 982 986 998 1000 1008 
	1014 1016 1029 1034 1043 1053 1059 1073 1075 1080 
	1089 1091 1094 1108 1117 1125 1130 1143 1152 1161 
	1165 1180 1189 1200 1219 1220 1224 1241 1249 1263 
	1281 1286 1296 1306 1309 1324 1333 1342 1358 1368 
	1385 1399 1412 1440 1440 1440 1469 1491 1500 1512 
	1532 1548 1565 1571 1584 1600 1618 1636 1656 1674 
	1698 1714 1728 1745 1756 1772 1800 1800 1800 1846 
	1872 1895 1944 1945 1946 1952 2000 2016 2038 2057 
	2088 2118 2160 2182 2232 2241 2250 2304 2323 2376 
	2400 2448 2483 2503 2520 2542 2571 2592 2656 2664 
	2665 2667 2707 2736 2769 2792 2808 2880 2880 2952 
	3000 3024 3061 3096 3130 3168 3207 3240 3273 3312 
	3347 3384 3429 3456 3477 3528 3549 3600 3600 3600 
	3600 3672 3717 3744 3789 3816 3830 3888 3940 3960 
	4000 4024 4032 4047 4104 4151 4176 4235 4248 4253 
	4320 4353 4392 4451 4464 4471 4500 4529 4536 4548 
	4608 4643 4680 4702 4752 4761 4800 4824 4831 4896 
	4938 4968 4997 5040 5104 5112 5143 5184 5194 5256 
	5282 5328 5359 5400 5458 5472 5538 5544 5545 5616 
	5631 5688 5717 5760 5802 5832 5887 5904 5972 5976 
	6000 6048 6105 6120 6139 6192 6223 6264 6295 6336 
	6388 6408 6471 6480 6487 6545 6552 6553 6624 6635 
	6696 6744 6768 6797 6840 6878 6912 6959 6984 7039 
	7056 7120 7128 7200 7200 2880 2880 7200 7200 7128 
	7110 7056 7021 6984 6927 6912 6857 6840 6784 6768 
	6742 6696 6648 6624 6554 6552 6545 6480 6459 6408 
	6362 6336 6320 6264 6261 6192 6166 6120 6067 6048 
	6000 5976 5966 5904 5864 5832 5760 5760 5705 5688 
	5651 5616 5547 5544 5538 5472 5435 5400 5333 5328 
	5325 5256 5210 5184 5143 5112 5091 5040 4970 4968 
	4967 4966 4917 4896 4843 4824 4800 4752 4711 4680 
	4645 4608 4572 4536 4524 4500 4476 4464 4424 4392 
	4364 4320 4265 4248 4235 4198 4176 4114 4104 4087 
	4032 4019 4000 3960 3892 3888 3879 3816 3789 3763 
	3744 3692 3672 3600 3600 3600 3600 3560 3528 3512 
	3456 3443 3429 3384 3349 3312 3273 3240 3200 3168 
	3149 3130 3114 3096 3064 3024 3000 2978 2965 2952 
	2945 2939 2880 2880 2824 2817 2808 2786 2769 2736 
	2717 2695 2667 2666 2664 2618 2592 2571 2537 2526 
	2524 2520 2497 2483 2470 2448 2441 2431 2400 2376 
	2361 2344 2323 2304 2292 2286 2268 2250 2244 2232 
	2215 2201 2182 2160 2149 2141 2118 2088 2087 2086 
	2057 2037 2028 2016 2004 2000 1990 1973 1947 1946 
	1945 1944 1920 1907 1895 1872 1871 1870 1852 1846 
	1835 1823 1817 1800 1778 1768 1756 1738 1735 1728 
	1714 1709 1694 1686 1674 1656 1655 1655 1636 1626 
	1618 1605 1600 1584 1582 1569 1565 1560 1548 1538 
	1532 1528 1516 1515 1512 1500 1497 1485 1477 1469 
	1458 1455 1440 1440 1800 1800 1800 2880 2880 5760 
	5760 2160 2160 2177 2182 2192 2204 2224 2227 2232 
	2245 2250 2263 2274 2295 2298 2304 2323 2333 2348 
	2372 2374 2376 2400 2415 2427 2448 2455 2473 2483 
	2506 2512 2520 2541 2557 2571 2592 2602 2611 2634 
	2664 2666 2667 2688 2700 2711 2734 2735 2736 2769 
	2802 2805 2806 2808 2830 2842 2880 2905 2919 2952 
	2959 2968 3000 3024 3042 3070 3086 3096 3130 3168 
	3176 3201 3224 3230 3240 3273 3289 3312 3323 3352 
	3375 3384 3409 3429 3456 3484 3528 3541 3600 3600 
	3633 3661 3666 3672 3724 3744 3789 3816 3857 3888 
	3927 3960 4000 4032 4053 4075 4090 4104 4154 4176 
	4235 4248 4320 4320 4320 4392 4408 4439 4464 4500 
	4536 4596 4608 4640 4680 4696 4752 4800 4814 4824 
	4871 4896 4901 4909 4968 5023 5040 5066 5112 5143 
	5184 5240 5256 5268 5328 5353 5400 5400 5472 5538 
	5544 5590 5616 5684 5688 5691 5760 5827 5832 5838 
	5883 5904 5957 5976 6000 6048 6083 6120 6171 6192 
	6206 6264 6289 6336 6353 6408 6441 6480 6497 6545 
	6552 6556 6624 6667 6696 6750 6768 6817 6840 6871 
	6912 6968 6984 6992 7056 7096 7128 7200 7200 2880 
	2880 2880 3600 3600 5400 5400 5400 2880 2880 2901 
	2909 2930 2939 2952 2969 2982 3000 3024 3032 3038 
	3064 3096 3097 3097 3130 3162 3165 3168 3189 3200 
	3213 3236 3237 3240 3261 3273 3309 3310 3312 3349 
	3384 3387 3388 3394 3429 3456 3470 3491 3512 3528 
	3556 3600 3600 3628 3646 3656 3672 3692 3733 3740 
	3744 3789 3816 3840 3860 3888 3892 3903 3945 3960 
	4000 4032 4046 4056 4104 4114 4142 4174 4176 4235 
	4248 4275 4299 4309 4320 4364 4392 4431 4464 4500 
	4536 4554 4571 4608 4645 4680 4700 4721 4752 4800 
	4824 4881 4896 4928 4966 4968 4980 5040 5053 5085 
	5112 5143 5184 5236 5256 5313 5328 5333 5400 5414 
	5434 5456 5472 5538 5544 5555 5616 5647 5672 5688 
	5716 5760 5760 5832 5850 5878 5904 5942 5976 6000 
	6048 6076 6120 6123 6128 6192 6261 6264 6310 6336 
	6400 6408 6416 6480 6545 6552 6558 6624 6695 6696 
	6698 6768 6795 6840 6857 6912 6954 6984 6996 7024 
	7047 7056 7097 7128 7200 7200 5760 5760 3600 3600 
	7200 7200 7128 7104 7059 7056 7053 6984 6923 6912 
	6899 6840 6792 6768 6731 6696 6667 6624 6562 6552 
	6550 6545 6505 6480 6429 6408 6372 6336 6328 6316 
	6284 6264 6207 6192 6160 6120 6112 6102 6048 6000 
	5976 5911 5904 5903 5902 5862 5832 5806 5760 5714 
	5688 5625 5616 5581 5544 5538 5472 5455 5400 5387 
	5373 5349 5328 5294 5256 5217 5200 5184 5164 5143 
	5127 5112 5070 5040 5000 4968 4949 4932 4914 4896 
	4865 4824 4800 4752 4737 4680 4675 4652 4615 4608 
	4580 4557 4548 4536 4500 4464 4444 4392 4390 4385 
	4337 4320 4300 4286 4248 4235 4208 4186 4176 4138 
	4104 4091 4068 4045 4032 4000 3960 3956 3950 3913 
	3888 3871 3851 3830 3816 3789 3757 3750 3744 3711 
	3675 3673 3673 3672 3648 3636 3600 3600 4320 4320 
	4320 4364 4392 4408 4436 4454 4464 4500 4536 4543 
	4547 4572 4596 4601 4608 4645 4680 4696 4735 4747 
	4752 4800 4824 4854 4872 4896 4909 4957 4966 4968 
	4998 5023 5031 5040 5082 5112 5143 5184 5205 5256 
	5262 5268 5328 5333 5400 5400 5400 5400 5468 5472 
	5505 5538 5541 5544 5610 5616 5684 5688 5723 5760 
	5760 5832 5838 5904 5918 5976 6000 6048 6085 6104 
	6120 6171 6192 6261 6264 6303 6336 6353 6408 6448 
	6480 6545 6552 6569 6624 6646 6696 6750 6768 6804 
	6840 6857 6890 6912 6968 6984 7012 7056 7082 7128 
	7200 7200 5760 5760 5040 5040 5040 5091 5112 5143 
	5184 5196 5221 5250 5253 5256 5305 5315 5328 5362 
	5400 5411 5419 5443 5472 5478 5510 5538 5544 5600 
	5616 5641 5663 5688 5727 5760 5793 5832 5847 5860 
	5882 5904 5929 5976 6000 6024 6048 6072 6120 6133 
	6146 6170 6192 6207 6222 6264 6300 6336 6357 6380 
	6395 6408 6462 6471 6480 6545 6552 6586 6624 6632 
	6667 6696 6720 6768 6811 6840 6904 6912 6936 6984 
	6991 7000 7056 7099 7128 7200 7200 5760 5760 5818 
	5832 5878 5904 5922 5938 5955 5976 5989 6000 6048 
	6063 6120 6124 6128 6192 6194 6216 6261 6262 6264 
	6330 6336 6368 6400 6404 6408 6472 6476 6480 6545 
	6552 6621 6624 6672 6696 6698 6768 6772 6776 6810 
	6840 6857 6912 6940 6984 7002 7024 7042 7056 7081 
	7111 7128 7200 7200 6480 6480 6545 6552 6583 6612 
	6624 6680 6696 6750 6768 6795 6821 6840 6894 6912 
	6968 6984 7043 7050 7056 7087 7121 7128 7200 7200 
	7200 7200 ] def
/PSL_path_n [ 295 2 247 3 2 2 198 3 2 3 
	169 2 2 138 104 2 83 57 26 2 
	] def
/PSL_label_angle [ 320.08 301.17 ] def
/PSL_label_str [
	(20)
	(40)
] def
/PSL_label_n [ 0 0 1 0 0 0 0 0 0 0 
	1 0 0 0 0 0 0 0 0 0 
	] def
/PSL_n_paths 20 def
/PSL_n_labels 2 def
/PSL_txt_x [ 3496 3545 ] def
/PSL_txt_y [ 2965 5850 ] def
/PSL_txt_n [ 2 ] def
PSL_set_label_heights
2 PSL_straight_path_labels
4 PSL_straight_path_clip
PSL_draw_path_lines N
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: psxy -R0/10/0/10 -JX6i -O -K -W1p,red
%%PROJ: xy 0.00000000 10.00000000 0.00000000 10.00000000 0.000 10.000 0.000 10.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_2
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
17 W
1 0 0 C
0 0 M
7200 6120 D
S
0 5904 M
7200 0 D
S
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: psbasemap -R0/10/0/10 -JX6i -O -K -Bg0.2
%%PROJ: xy 0.00000000 10.00000000 0.00000000 10.00000000 0.000 10.000 0.000 10.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_3
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
25 W
4 W
0 0 M
0 7200 D
S
144 0 M
0 7200 D
S
288 0 M
0 7200 D
S
432 0 M
0 7200 D
S
576 0 M
0 7200 D
S
720 0 M
0 7200 D
S
864 0 M
0 7200 D
S
1008 0 M
0 7200 D
S
1152 0 M
0 7200 D
S
1296 0 M
0 7200 D
S
1440 0 M
0 7200 D
S
1584 0 M
0 7200 D
S
1728 0 M
0 7200 D
S
1872 0 M
0 7200 D
S
2016 0 M
0 7200 D
S
2160 0 M
0 7200 D
S
2304 0 M
0 7200 D
S
2448 0 M
0 7200 D
S
2592 0 M
0 7200 D
S
2736 0 M
0 7200 D
S
2880 0 M
0 7200 D
S
3024 0 M
0 7200 D
S
3168 0 M
0 7200 D
S
3312 0 M
0 7200 D
S
3456 0 M
0 7200 D
S
3600 0 M
0 7200 D
S
3744 0 M
0 7200 D
S
3888 0 M
0 7200 D
S
4032 0 M
0 7200 D
S
4176 0 M
0 7200 D
S
4320 0 M
0 7200 D
S
4464 0 M
0 7200 D
S
4608 0 M
0 7200 D
S
4752 0 M
0 7200 D
S
4896 0 M
0 7200 D
S
5040 0 M
0 7200 D
S
5184 0 M
0 7200 D
S
5328 0 M
0 7200 D
S
5472 0 M
0 7200 D
S
5616 0 M
0 7200 D
S
5760 0 M
0 7200 D
S
5904 0 M
0 7200 D
S
6048 0 M
0 7200 D
S
6192 0 M
0 7200 D
S
6336 0 M
0 7200 D
S
6480 0 M
0 7200 D
S
6624 0 M
0 7200 D
S
6768 0 M
0 7200 D
S
6912 0 M
0 7200 D
S
7056 0 M
0 7200 D
S
7200 0 M
0 7200 D
S
0 0 M
7200 0 D
S
0 144 M
7200 0 D
S
0 288 M
7200 0 D
S
0 432 M
7200 0 D
S
0 576 M
7200 0 D
S
0 720 M
7200 0 D
S
0 864 M
7200 0 D
S
0 1008 M
7200 0 D
S
0 1152 M
7200 0 D
S
0 1296 M
7200 0 D
S
0 1440 M
7200 0 D
S
0 1584 M
7200 0 D
S
0 1728 M
7200 0 D
S
0 1872 M
7200 0 D
S
0 2016 M
7200 0 D
S
0 2160 M
7200 0 D
S
0 2304 M
7200 0 D
S
0 2448 M
7200 0 D
S
0 2592 M
7200 0 D
S
0 2736 M
7200 0 D
S
0 2880 M
7200 0 D
S
0 3024 M
7200 0 D
S
0 3168 M
7200 0 D
S
0 3312 M
7200 0 D
S
0 3456 M
7200 0 D
S
0 3600 M
7200 0 D
S
0 3744 M
7200 0 D
S
0 3888 M
7200 0 D
S
0 4032 M
7200 0 D
S
0 4176 M
7200 0 D
S
0 4320 M
7200 0 D
S
0 4464 M
7200 0 D
S
0 4608 M
7200 0 D
S
0 4752 M
7200 0 D
S
0 4896 M
7200 0 D
S
0 5040 M
7200 0 D
S
0 5184 M
7200 0 D
S
0 5328 M
7200 0 D
S
0 5472 M
7200 0 D
S
0 5616 M
7200 0 D
S
0 5760 M
7200 0 D
S
0 5904 M
7200 0 D
S
0 6048 M
7200 0 D
S
0 6192 M
7200 0 D
S
0 6336 M
7200 0 D
S
0 6480 M
7200 0 D
S
0 6624 M
7200 0 D
S
0 6768 M
7200 0 D
S
0 6912 M
7200 0 D
S
0 7056 M
7200 0 D
S
0 7200 M
7200 0 D
S
2 setlinecap
25 W
N 0 7200 M 0 -7200 D S
/PSL_A0_y 0 def
/PSL_A1_y 0 def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
7200 0 T
N 0 7200 M 0 -7200 D S
/PSL_A0_y 0 def
/PSL_A1_y 0 def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-7200 0 T
N 0 0 M 7200 0 D S
/PSL_A0_y 0 def
/PSL_A1_y 0 def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 7200 T
N 0 0 M 7200 0 D S
/PSL_A0_y 0 def
/PSL_A1_y 0 def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -7200 T
0 setlinecap
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: psclip -C -O -K
%%BeginObject PSL_Layer_4
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
PSL_nclip {PSL_cliprestore} repeat
%%EndObject
0 A
FQ
O0
0 0 TM

% PostScript produced by:
%%GMT: psbasemap -R0/10/0/10 -JX6i -O -B2 '-BWSne+tDelayed Annotations'
%%PROJ: xy 0.00000000 10.00000000 0.00000000 10.00000000 0.000 10.000 0.000 10.000 +xy +a=6378137.000 +b=6356752.314245
%%BeginObject PSL_Layer_5
0 setlinecap
0 setlinejoin
3.32551 setmiterlimit
25 W
2 setlinecap
N 0 7200 M 0 -7200 D S
/PSL_A0_y 83 def
/PSL_A1_y 0 def
8 W
N 0 0 M -83 0 D S
N 0 1440 M -83 0 D S
N 0 2880 M -83 0 D S
N 0 4320 M -83 0 D S
N 0 5760 M -83 0 D S
N 0 7200 M -83 0 D S
/PSL_AH0 0
/MM {neg exch M} def
PSL_font_encode 0 get 0 eq {Standard+_Encoding /Helvetica /Helvetica PSL_reencode PSL_font_encode 0 1 put} if
200 F0
(0) sw mx
(2) sw mx
(4) sw mx
(6) sw mx
(8) sw mx
(10) sw mx
def
/PSL_A0_y PSL_A0_y 83 add def
0 PSL_A0_y MM
(0) mr Z
1440 PSL_A0_y MM
(2) mr Z
2880 PSL_A0_y MM
(4) mr Z
4320 PSL_A0_y MM
(6) mr Z
5760 PSL_A0_y MM
(8) mr Z
7200 PSL_A0_y MM
(10) mr Z
/PSL_A0_y PSL_A0_y PSL_AH0 add def
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
7200 0 T
25 W
N 0 7200 M 0 -7200 D S
/PSL_A0_y 83 def
/PSL_A1_y 0 def
8 W
N 0 0 M 83 0 D S
N 0 1440 M 83 0 D S
N 0 2880 M 83 0 D S
N 0 4320 M 83 0 D S
N 0 5760 M 83 0 D S
N 0 7200 M 83 0 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
-7200 0 T
25 W
N 0 0 M 7200 0 D S
/PSL_A0_y 83 def
/PSL_A1_y 0 def
8 W
N 0 0 M 0 -83 D S
N 1440 0 M 0 -83 D S
N 2880 0 M 0 -83 D S
N 4320 0 M 0 -83 D S
N 5760 0 M 0 -83 D S
N 7200 0 M 0 -83 D S
/PSL_AH0 0
/MM {neg M} def
(0) sh mx
(2) sh mx
(4) sh mx
(6) sh mx
(8) sh mx
(10) sh mx
def
/PSL_A0_y PSL_A0_y 83 add PSL_AH0 add def
0 PSL_A0_y MM
(0) bc Z
1440 PSL_A0_y MM
(2) bc Z
2880 PSL_A0_y MM
(4) bc Z
4320 PSL_A0_y MM
(6) bc Z
5760 PSL_A0_y MM
(8) bc Z
7200 PSL_A0_y MM
(10) bc Z
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 7200 T
25 W
N 0 0 M 7200 0 D S
/PSL_A0_y 83 def
/PSL_A1_y 0 def
8 W
N 0 0 M 0 83 D S
N 1440 0 M 0 83 D S
N 2880 0 M 0 83 D S
N 4320 0 M 0 83 D S
N 5760 0 M 0 83 D S
N 7200 0 M 0 83 D S
/PSL_LH 0 def /PSL_L_y PSL_A0_y PSL_A1_y mx def
0 -7200 T
0 setlinecap
/PSL_H_y PSL_L_y PSL_LH add 233 add def
3600 7200 PSL_H_y add M
400 F0
(Delayed Annotations) bc Z
%%EndObject
%%PageTrailer
U
showpage

%%Trailer

end
%%EOF
