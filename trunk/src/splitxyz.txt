#include "common_options.txt"
.TH SPLITXYZ 1 MANDATE GMT_STRING "Generic Mapping Tools"
.SH NAME
splitxyz \- filter to divide (x,y,z[,distance,heading]) data into (x,y,z) track segments.
.SH SYNOPSIS
BD(splitxyz) [ IT(xyz[dh]file) ] OPT(C)IT(course_change) [ OPT(A)IT(azimuth)/IT(tolerance) ] 
[ OPT(D)IT(minimum_distance) ] [ OPT(F)IT(xy_filter)/IT(z_filter) ] [ OPT(G)IT(gap_distance) ] 
[ OPT(M) ] [ OPT(N)IT(namestem) ] [ OPT(Q)IT(flags) ] [ OPT(S) ] [ GMT_V_OPT ] 
[ OPT(Z) ] [ GMT_b_OPT ] [ GMT_f_OPT ] [ GMT_g_OPT ] [ GMT_h_OPT ] [ GMT_i_OPT ] [ GMT_colon_OPT ]
.SH DESCRIPTION
BD(splitxyz) reads a series of (x,y[,z]) records [or optionally (x,y,z,d,h); see OPT(S) 
option] from standard input [or IT(xyz[dh]file)] and splits this into separate lists 
of (x,y[,z]) series, such that each series has a nearly constant azimuth through the x,y plane.  
There are options to choose only those series which have a certain orientation, to set a 
minimum length for series, and to high\- or low\-pass filter the z values and/or the x,y 
values.  BD(splitxyz) is a useful filter between data extraction and BD(pswiggle) plotting, 
and can also be used to divide a large x,y,z dataset into segments.  The output is always
in the ASCII format; input may be ASCII or binary (see OPT(b)).
.SH REQUIRED ARGUMENTS
.TP
IT(xyz[dh]file(s))
3 (but see OPT(Z)) [or 5] column ASCII file [or binary, see OPT(b)] holding (x,y,z[,d,h]) data values.  To use (x,y,z,d,h) input, 
sorted so that d is non-decreasing, specify the OPT(S) option; default expects (x,y,z) only.  
If no file is specified, BD(splitxyz) will read from standard input.
.TP
OPT(C)IT(course_change)
Terminate a segment when a course change exceeding IT(course_change) degrees of heading 
is detected.
.SH OPTIONAL ARGUMENTS
.TP
OPT(A)IT(azimuth)/IT(tolerance)
Write out only those segments which are within +/- IT(tolerance) degrees of IT(azimuth) 
in heading, measured clockwise from North, [0 - 360].  [Default writes all acceptable 
segments, regardless of orientation].
.TP
OPT(D)IT(minimum_distance)
Do not write a segment out unless it is at least IT(minimum_distance) units long [0]
.TP
OPT(F)IT(xy_filter)/IT(z_filter)
Filter the z values and/or the x,y values, assuming these are functions of d coordinate.  
IT(xy_filter) and  IT(z_filter) are filter widths in distance units.  If a filter width 
is zero, the filtering is not performed.  The absolute value of the width is the 
full width of a cosine\-arch low\-pass filter.  If the width is positive, the data are 
low\-pass filtered; if negative, the data are high\-pass filtered by subtracting the 
low\-pass value from the observed value.  If IT(z_filter) is non\-zero, 
the entire series of input z values is filtered before any segmentation is performed, so 
that the only edge effects in the filtering will happen at the beginning and end of the 
complete data stream.  If IT(xy_filter) is non\-zero, the data is first divided into 
segments and then the x,y values of each segment are filtered separately.  This may introduce 
edge effects at the ends of each segment, but prevents a low\-pass x,y filter from rounding 
off the corners of track segments.  [Default = no filtering].
.TP
OPT(G)IT(gap_distance)
Do not let a segment  have a gap exceeding IT(gap_distance); instead, split it into two 
segments.  [Default ignores gaps].
.TP
OPT(M)
Use Map units.  Then x,y are in degrees of longitude, latitude, distances are
in kilometers, and angles are azimuths.  [Default:  distances are cartesian in same
units as x,y and angles are counter-clockwise from horizontal].
.TP
OPT(N)IT(namestem)
Create Named output files, writing each segment to a separate file in the working directory 
named IT(namestem).profile\fI#\fP, where IT(#) increases consecutively from 1.  [Default 
writes entire output to stdout, separating segments by sub-headings that start with > marks].
.TP
OPT(Q)IT(flags)
Specify your desired output using any combination of IT(xyzdh), in any order.  Do not space between
the letters.  Use lower case.  The output will be ASCII (or binary, see OPT(bo)) columns of values corresponding 
to IT(xyzdh) [Default is OPT(Q)IT(xyzdh) (OPT(Q)IT(xydh) if OPT(Z) is set)].
.TP
OPT(S)
d and h is supplied.  In this case, input contains x,y,z,d,h.
[Default expects (x,y,z) input, and d,h are computed from delta x, 
delta y, according to OPT(M) option]
#include "explain_-V.txt"
.TP
OPT(Z)
Data have x,y only (no z-column).
#include "explain_-bi.txt"
[Default is 2, 3, or 5 input columns as set by OPT(S), OPT(Z)].
#include "explain_-bo.txt"
[Default is 1-5 output columns as set by OPT(Q)].
#include "explain_-f.txt"
#include "explain_-g.txt"
#include "explain_-h.txt"
Not used with binary data.
#include "explain_-icols.txt"
#include "explain_colon.txt"
#include "explain_help.txt"
#include "explain_precision.txt"
.SH EXAMPLES
Suppose you want to make a wiggle plot of magnetic anomalies on segments oriented 
approximately east\-west from a cruise called cag71 in the region OPT(R)300/315/12/20.  
You want to use a 100km low\-pass filter to smooth the tracks and a 500km high\-pass 
filter to detrend the magnetic anomalies.  Try this:
.br
.sp
BD(gmtlist) cag71 OPT(R)300/315/12/20 OPT(F)xyzdh | 
BD(splitxyz) OPT(A)90/15 OPT(F)100/-500 OPT(M) OPT(D)100 OPT(S) OPT(V) | 
BD(pswiggle) OPT(R)300/315/12/20 OPT(Jm)0.6 OPT(Ba)5BD(f)1:.cag71: OPT(T)1 OPT(W)0.75p OPT(G)gray OPT(Z)200 > cag71_wiggles.ps
.br
.sp
MGD-77 users: For this application we recommend that you extract d, h from BD(mgd77list) rather than
have BD(splitxyz) compute them separately.
.br
.sp
Suppose you have been given a binary, double-precision file containing lat, lon, gravity values from a survey, 
and you want to split it into profiles named IT(survey).profile\fI#\fP (when gap exceeds 100 km).  Try this:
.sp
BD(splitxyz) survey.bin OPT(N)survey OPT(V) OPT(G)100 OPT(D)100 OPT(:) OPT(M) OPT(bi))3
.SH "SEE ALSO"
.IR gmt (1),
.IR mgd77list (1),
.IR pswiggle (1)
