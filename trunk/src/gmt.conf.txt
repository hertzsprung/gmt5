#include "common_options.txt"
.TH GMT.CONF 5 MANDATE GMT_STRING "Generic Mapping Tools"
#define CODE_SI		ISOLatin1+
#define PAPER_SI	a4
#define CODE_US		Standard+
#define PAPER_US	letter
.SH NAME
gmt.conf \- Configuration for BD(GMT)
.SH DESCRIPTION
The following is a list of the parameters that are user-definable in BD(GMT).  The
parameter names are always given in UPPER CASE.  The parameter values are
case-insensitive unless otherwise noted.  The
system defaults are given in brackets [ for SI (and US) ].  Those marked BD(*) can be set on the command
line as well (the corresponding option is given in parentheses).  Note that default distances and
lengths below are given in both cm or inch; the chosen default depends on your choice of default
unit (see BD(PROJ_LENGTH_UNIT)).  You can explicitly specify the unit used for distances and
lengths by appending BD(c) (cm), BD(i) (inch), or BD(p) (points).
When no unit is indicated the value will be assumed to be in the unit set by BD(PROJ_LENGTH_UNIT).
Several parameters take only BD(true) or BD(false).
Finally, most of these parameters can be changed on-the-fly via the PAR(PARAMETER,VALUE) option to any
BD(GMT) program.  However, a few are static and are only read via the BD(gmt.conf) file; these
are labeled (static).
.SH COMMON SPECIFICATIONS
The full explanation for how to specify pens, pattern fills, colors, and fonts can be found in the BD(gmt) man page.
.TP
.B COLOR_BACKGROUND
Color used for the background of images (i.e., when z < lowest color table entry)  [black].
.TP
.B COLOR_FOREGROUND
Color used for the foreground of images (i.e., when z > highest color table entry)  [white].
.TP
.B COLOR_HSV_MAX_SATURATION
Maximum saturation (0\-1) assigned for most positive intensity value [0.1].
.TP
.B COLOR_HSV_MIN_SATURATION
Minimum saturation (0\-1) assigned for most negative intensity value [1.0].
.TP
.B COLOR_HSV_MAX_VALUE
Maximum value (0\-1) assigned for most positive intensity value [1.0].
.TP
.B COLOR_HSV_MIN_VALUE
Minimum value (0\-1) assigned for most negative intensity value [0.3].
.TP
.B COLOR_MODEL
Selects in which color space a color palette should be interpolated.
By default, color interpolation takes place directly on the RGB values which can produce
some unexpected hues, whereas interpolation directly on the HSV values better preserves those hues.
The choices are:
BD(none) (default: use whatever the COLOR_MODEL setting in the color palette file demands),
BD(rgb) (force interpolation in RGB),
BD(hsv) (force interpolation in HSV),
BD(cmyk) (assumes colors are in CMYK but interpolates in RGB).
.TP
.B COLOR_NAN
Color used for the non-defined areas of images (i.e., where z == NaN)  [127.5].
.TP
.B DIR_GSHHG
Path to GSHHG files.  Defaults to BD($GMT_SHAREDIR)/coast if empty.
.TP
.B DIR_TMP
Replaces the session temp dir BD($GMT_TMPDIR) from the environment.
.TP
.B DIR_USER
Replaces the session user dir BD($GMT_USERDIR) from the environment.
.TP
.B FONT
Sets the default for all fonts, except FONT_LOGO. This setting is not included in the BD(gmt.conf) file.
.TP
.B FONT_ANNOT_PRIMARY
Font used for primary annotations, etc. [12p,Helvetica,black].
When BD(+) is prepended, scale fonts, offsets and tick-lengths relative to BD(FONT_ANNOT_PRIMARY).
.TP
.B FONT_ANNOT_SECONDARY
Font to use for time axis secondary annotations [14p,Helvetica,black].
.TP
.B FONT_LABEL
Font to use when plotting labels below axes [16p,Helvetica,black].
.TP
.B FONT_LOGO
Font to use for text plotted as part of the GMT time logo [8p,Helvetica,black].
.TP
.B FONT_TITLE
Font to use when plotting titles over graphs [24p,Helvetica,black].
.TP
.B FORMAT_CLOCK_IN
Formatting template that indicates how an input clock string is formatted.  This template
is then used to guide the reading of clock strings in data fields.  To properly decode
12-hour clocks, append am or pm (or upper case) to match your data records. As examples,
try hh:mm, hh:mm:ssAM, etc. [hh:mm:ss].
.TP
.B FORMAT_CLOCK_MAP
Formatting template that indicates how an output clock string is to be plotted.  This template
is then used to guide the formatting of clock strings in plot annotations.  See BD(FORMAT_CLOCK_OUT)
for details. [hh:mm:ss].
.TP
.B FORMAT_CLOCK_OUT
Formatting template that indicates how an output clock string is to be formatted.  This template
is then used to guide the writing of clock strings in data fields.  To use a floating point
format for the smallest unit (e.g., seconds), append \.xxx, where the number of x indicates
the desired precision.  If no floating point is indicated then the smallest specified unit
will be rounded off to nearest integer.  For 12-hour clocks, append am, AM, a.m., or A.M. (BD(GMT)
will replace a|A with p|P for pm).  If your template starts with a leading hyphen (-) then each integer item (y,m,d) will be
printed without leading zeros (default uses fixed width formats).  As examples, try
hh:mm, hh.mm.ss, hh:mm:ss.xxxx, hha.m., etc. [hh:mm:ss].  If the format is simply - then
no clock is output and the ISO T divider between date and clock is omitted.
.TP
.B FORMAT_DATE_IN
Formatting template that indicates how an input date string is formatted.  This template
is then used to guide the reading of date strings in data fields.  You may specify either
Gregorian calendar format or ISO week calendar format.  Gregorian calendar: Use any
combination of yyyy (or yy for 2-digit years; if so see BD(TIME_Y2K_OFFSET_YEAR)), mm (or o
for abbreviated 3-character month name in the current time language),
and dd, with or without delimiters.  For day-of-year data, use jjj instead of mm and/or dd.
Examples can be ddmmyyyy, yy-mm-dd, dd-o-yyyy, yyyy/dd/mm, yyyy-jjj, etc.
ISO Calendar:  Expected template is yyyy[-]W[-]ww[-]d, where ww is ISO week and d is ISO week
day.  Either template must be consistent, e.g., you cannot specify months if you do not specify
years.  Examples are yyyyWwwd, yyyy-Www, etc. [yyyy-mm-dd].
.TP
.B FORMAT_DATE_MAP
Formatting template that indicates how an output date string is to be plotted.  This template
is then used to guide the plotting of date strings in data fields.  See BD(FORMAT_DATE_OUT)
for details.  In addition, you may use a single o instead of mm (to plot month name) and
u instead of W[-]ww to plot "Week ##".  Both of these text strings will be affected by
the BD(TIME_LANGUAGE), BD(FORMAT_TIME_PRIMARY_MAP) and BD(FORMAT_TIME_SECONDARY_MAP)
setting.  [yyyy-mm-dd].
.TP
.B FORMAT_DATE_OUT
Formatting template that indicates how an output date string is to be formatted.  This template
is then used to guide the writing of date strings in data fields.  You may specify either
Gregorian calendar format or ISO week calendar format.  Gregorian calendar: Use any
combination of yyyy (or yy for 2-digit years; if so see BD(TIME_Y2K_OFFSET_YEAR)), mm (or o for
abbreviated month name in the current time language),
and dd, with or without delimiters.  For day-of-year data, use jjj instead of mm and/or dd.
As examples, try yy/mm/dd, yyyy=jjj, dd-o-yyyy, dd-mm-yy, yy-mm, etc.
ISO Calendar:  Expected template is yyyy[-]W[-]ww[-]d, where ww is ISO week and d is ISO week
day.  Either template must be consistent, e.g., you cannot specify months if you do not specify
years.  As examples, try yyyyWww, yy-W-ww-d, etc. If your template starts with a leading hyphen (-) then each integer item (y,m,d) will be
printed without leading zeros (default uses fixed width formats) [yyyy-mm-dd].
If the format is simply - then no date is output and the ISO T divider between date and clock is omitted.
.TP
.B FORMAT_GEO_MAP
Formatting template that indicates how an output geographical coordinate is to be plotted.  This template
is then used to guide the plotting of geographical coordinates in data fields.  See 
BD(FORMAT_GEO_OUT) for details.  In addition, you can append A which plots the absolute value of 
the coordinate.  The default is ddd:mm:ss.  Not all items may be plotted as this depends on the annotation 
interval.
.TP
.B FORMAT_GEO_OUT
Formatting template that indicates how an output geographical coordinate is to be formatted.  This template
is then used to guide the writing of geographical coordinates in data fields.  The template is in
general of the form [+|-]D or [+|-]ddd[:mm[:ss]][.xxx][F].  By default, longitudes will be reported in the range [-180,180].
The various terms have the following purpose:
.sp
    + Output longitude in the range [0,360]
.sp
    - Output longitude in the range [-360,0]
.sp
    D Use BD(FORMAT_FLOAT_OUT) for floating point degrees.
.sp
    ddd Fixed format integer degrees
.sp
    : delimiter used
.sp
    mm Fixed format integer arc minutes
.sp
    ss Fixed format integer arc seconds
.sp
    \.xxx Floating fraction of previous integer field, fixed width.
.sp
    F Encode sign using WESN suffix
.sp
    G Same as F but with a leading space before suffix
.br
.sp
The default is D.
.TP
.B FORMAT_FLOAT_MAP
Format (C language printf syntax) to be used when plotting double precision floating point numbers on maps.
For geographic coordinates, see BD(FORMAT_GEO_MAP). [%.12lg].
.TP
.B FORMAT_FLOAT_OUT
Format (C language printf syntax) to be used when printing double precision floating point numbers to output files.
For geographic coordinates, see BD(FORMAT_GEO_OUT). [%.12lg].  To give some columns a separate format, supply one or
more comma-separated IT(cols):IT(format) specifications, where IT(cols) can be specific columns (e.g., 5 for 6th since 0 is the first)
or a range of columns (e.g., 3-7).  The last specification without column information will override the format
for all other columns.
.TP
.B FORMAT_TIME_PRIMARY_MAP
Controls how primary month-, week-, and weekday-names are formatted.  Choose among BD(full), BD(abbreviated), and
BD(character).  If the leading BD(f), BD(a), or BD(c) are replaced with BD(F), BD(A), and BD(C) the entire annotation will be in upper case  [full].
.TP
.B FORMAT_TIME_SECONDARY_MAP
Controls how secondary month-, week-, and weekday-names are formatted.  Choose among BD(full), BD(abbreviated), and
BD(character).  If the leading BD(f), BD(a), or BD(c) are replaced with BD(F), BD(A), and BD(C) the entire annotation will be in upper case  [full].
.TP
.B FORMAT_TIME_STAMP
Defines the format of the time information in the UNIX time stamp. This format is parsed by the C function BD(strftime),
so that virtually any text can be used (even not containing any time information)  [%Y %b %d %H:%M:%S].
.TP
.B GMT_COMPATIBILITY
Determines if this GMT version should be able to parse command-line
options for a prior major release.  Specify either 4 or 5. If 4 is
set we will parse obsolete GMT 4 options and issue warnings; if 5
is set then parsing GMT-4 only syntax will result in errors  [4].
.TP
.B GMT_FFT
Determines which Fast Fourier Transform (FFT) should be used among those that have
been configured during installation. Choose from BD(auto) (pick the most suitable
for the task among available algorithms), BD(fftw)[,IT(planner_flag)] (The Fastest
Fourier Transform in the West), BD(accelerate) (Use the Accelerate Framework under
OS X; Note, that the number of samples to be processed must be a base 2 exponent),
BD(kiss), (Kiss FFT), BD(brenner) Brenner Legacy FFT [auto].
.sp
FFTW can "learn" how to optimally compute Fourier transforms on the current
hardware and OS by computing several FFTs and measuring their execution time.
This so gained "Wisdom" will be stored in and reloaded from the file
fftw_wisdom_<hostname> in DIR_USER or, if DIR_USER is not writable, in the current
directory.
To use this feature append IT(planner_flag), which can be one of IT(measure),
IT(patient), and IT(exhaustive); see FFTW reference for details. The default FFTW
planner flag is IT(estimate), i.e., pick a (probably sub-optimal) plan quickly.
Note: if you need a single transform of a given size only, the one-time cost of
the smart planner becomes significant. In that case, stick to the default planner, IT(estimate),
based on heuristics.
.TP
.B GMT_HISTORY
Passes the history of past common command options via the hidden \.gmtcommands file.
The different values for this setting are: BD(true), BD(readonly), BD(false), to either read and write to the \.gmtcommands file,
only read, or not use the file at all  [true].
.TP
.B GMT_INTERPOLANT
Determines if linear (linear), Akima's spline (akima), natural cubic spline (cubic) or\"'
no interpolation (none) should be used for 1-D interpolations in various programs [akima].
.TP
.B GMT_EXTRAPOLATE_VAL
Determines what to do if extrapolating beyond the data domain. Choose among 'NaN', 'extrap' or 'extrapval,val' (without quotes).
In the first case return NaN for any element of x that is outside range [Default]. Second case lets the selected
algorithm compute the extrapolation values. Third case sets the extrapolation values to the constant value
passed in 'val' (this value must off course be numeric). 
.TP
.B GMT_TRIANGULATE
Determines if we use the BD(Watson) [Default] or BD(Shewchuk) algorithm (if configured during installation) for triangulation.
Note that Shewchuk is required for operations involving Voronoi constructions.
.TP
.B GMT_VERBOSE
(BD(* \-V)) Determines the level of verbosity used by BD(GMT) programs.  Choose among 6 levels; each level
adds to the verbosity of the lower levels: BD(q)uiet, BD(n)normal (errors and warnings), BD(c)ompatibility warnings,
(v)erbose progress reports, (l)ong verbose progress reports, BD(d)ebugging messages  [c].
.TP
.B IO_COL_SEPARATOR
This setting determines what character will separate ASCII output data columns written by BD(GMT).  Choose
from tab, space, comma, and none [tab].
.TP
.B IO_GRIDFILE_FORMAT
Default file format for grids, with optional scale, offset and invalid value, written as
IT(ff)/IT(scale)/IT(offset)/IT(invalid). The 2-letter format indicator can be one of
[BD(abcegnrs)][BD(bsifd)].  See BD(grdreformat)(1) and Section 4.20 of the GMT Technical
Reference and Cookbook for more information.
The IT(scale) and IT(offset) modifiers may be left empty to select default values
(scale = 1, offset = 0), or you may specify IT(a) for auto-adjusting the scale and/or
offset of packed integer grids (=IT(id/a) is a shorthand for =IT(id/a/a)).
When IT(invalid) is omitted the appropriate value for the given format is used (NaN or
largest negative). [nf].
.TP
.B IO_GRIDFILE_SHORTHAND
If true, all grid file names are examined to see if they use the file extension
shorthand discussed in Section 4.17 of the BD(GMT) Technical Reference and Cookbook.
If false, no filename expansion is done [false].
.TP
.B IO_HEADER
(BD(* \-h)) Specifies whether input/output ASCII files have header record(s) or not  [false].
.TP
.B IO_LONLAT_TOGGLE
(BD(* \-:)) Set if the first two columns of input and output files contain (latitude,longitude) or (y,x) rather than the expected
(longitude,latitude) or (x,y).  false means we have (x,y) both on input and output.  true means both input and output
should be (y,x).  IN means only input has (y,x), while OUT means only output should be (y,x).  [false].
.TP
.B IO_N_HEADER_RECS
Specifies how many header records to expect if OPT(h) is used  [0].  Note this will
skip the specified number of records regardless of what they are.  Since any records
starting with '#' is automatically considered a header you will only specify a non-zero
number in order to skip headers that do not conform to that convention.
.TP
.B IO_NAN_RECORDS
Determines what happens when input records containing NaNs for IT(x) or IT(y) (and in some
cases IT(z)) are read.  Choose between BD(skip), which will simply report how many bad
records were skipped, and BD(pass) [Default], which will pass these records on to the calling programs.
For most programs this will result in output records with NaNs as well, but some will interpret these
NaN records to indicate gaps in a series; programs may then use that information to detect segmentation (if
applicable).
.TP
.B IO_NC4_CHUNK_SIZE
Sets the default chunk size for the BD(lat) and BD(lon) dimension of the BD(z) variable.
This produces netCDF version 4 files which can only be read with the netCDF 4 library.
Very large chunk sizes and sizes smaller than 128 should be avoided because they can
lead to unexpectedly bad performance.
Note that a chunk of a single precision floating point variable of size 2896x2896
completely fills the chunk cache of 32MiB.
Specify the chunk size for each dimension separated by a comma, or BD(a)uto for
optimally chosen chunk sizes in the range [128,256).
Set IO_NC4_CHUNK_SIZE to BD(c)lassic for classic netCDF. [auto]
.TP
.B IO_NC4_DEFLATION_LEVEL
Sets the compression level for netCDF4 files upon output. This produces netCDF version 4
files which can only be read with the netCDF 4 library. Values allowed are integers
between 0 (no compression) to 9 (maximum compression). Enabling compression level 1 can
dramatically improve performance and reduce the size of certain data. While higher
compression levels further reduce the data size, they do so at the cost of extra
processing time. [0]
.TP
.B IO_SEGMENT_MARKER
This holds the character we expect to indicate a segment header in an incoming ASCII data or text table  [>].  If this
marker should be different for output then append another character for the output segment marker.  The two
characters must be separated by a comma.  Two marker characters have special meaning: B means "blank line" and
will treat blank lines as initiating a new segment, whereas N means "NaN record" and will treat records with
all NaNs as initiating a new segment.  If you choose B or N for the output marker then the normal GMT segment
header is replaced by a blank or NaN record, respectively, and no segment header information is written.
To use B or N as regular segment markers you must escape them with a leading backslash.
.TP
.B MAP_ANNOT_MIN_ANGLE
If the angle between the map boundary and the annotation baseline is less than this minimum value (in degrees), the
annotation is not plotted (this may occur for certain oblique projections.)  Give a value in the
range [0,90]. [20]
.TP
.B MAP_ANNOT_MIN_SPACING
If an annotation would be plotted less than this minimum distance from its closest neighbor, the
annotation is not plotted (this may occur for certain oblique projections.) [0p]
.TP
.B MAP_ANNOT_OBLIQUE
This integer is a sum of 6 bit flags (most of which only are relevant for oblique projections):
If bit 1 is set (1), annotations will occur wherever a gridline crosses the
map boundaries, else longitudes will be annotated on the lower and upper boundaries only, and latitudes will be
annotated on the left and right boundaries only.  If bit 2 is set (2), then longitude annotations will
be plotted horizontally.  If bit 3 is set (4), then latitude annotations will be plotted horizontally.
If bit 4 is set (8), then oblique tick-marks are extended to give a projection equal to the specified tick length.
If bit 5 is set (16), tick-marks will be drawn normal to the border regardless of gridline angle.
If bit 6 is set (32), then latitude annotations will be plotted parallel to the border.
To set a combination of these, add up the values in parentheses. [1].
.TP
.B MAP_ANNOT_OFFSET_PRIMARY
Distance from end of tick-mark to start of annotation [5p].
.TP
.B MAP_ANNOT_OFFSET_SECONDARY
Distance from base of primary annotation to the top of the secondary annotation [5p] (Only
applies to time axes with both primary and secondary annotations).
.TP
.B MAP_ANNOT_ORTHO
Determines which axes will get their annotations (for linear projections) plotted orthogonally to the axes.
Combine any BD(w), BD(e), BD(s), BD(n), BD(z) (uppercase allowed as well). [we].
.TP
.B MAP_DEFAULT_PEN
Sets the default of all pens related to OPT(W) options. Prepend BD(+) to overrule the color of the
parameters BD(MAP_GRID_PEN_PRIMARY), BD(MAP_GRID_PEN_SECONDARY), BD(MAP_FRAME_PEN), BD(MAP_TICK_PEN_PRIMARY), and BD(MAP_TICK_PEN_SECONDARY)
by the color of BD(MAP_DEFAULT_PEN)  [default,black].
.TP
.B MAP_DEGREE_SYMBOL
Determines what symbol is used to plot the degree symbol on geographic map annotations.  Choose between
ring, degree, colon, or none [ring].
.TP
.B MAP_FRAME_AXES
Sets which axes to draw and annotate.  Combine any uppercase BD(W), BD(E), BD(S), BD(N), BD(Z) to draw and annotate
west, east, south, north and/or vertical (perspective view only) axis.  Use lower case to draw the axis only, but not annotate.
Add an optional BD(+) to draw a cube of axes in perspective view.
[WESN].
.TP
.B MAP_FRAME_PEN
Pen attributes used to draw plain map frame [thicker,black].
.TP
.B MAP_FRAME_TYPE
Choose between BD(inside), BD(plain) and BD(fancy) (thick boundary, alternating black/white frame; append BD(+) for rounded corners)  [fancy].
For some map projections (e.g., Oblique Mercator), plain is the only option even if fancy is set as default.
In general, fancy only applies to situations where the projected x and y directions parallel the longitude and latitude
directions (e.g., rectangular projections, polar projections).  For situations where all boundary ticks and annotations
must be inside the maps (e.g., for preparing geotiffs), chose BD(inside).
.TP
.B MAP_FRAME_WIDTH
Width (> 0) of map borders for fancy map frame [5p].
.TP
.B MAP_GRID_CROSS_SIZE_PRIMARY
Size (>= 0) of grid cross at lon-lat intersections.  0 means draw continuous gridlines
instead [0p].
.TP
.B MAP_GRID_CROSS_SIZE_SECONDARY
Size (>= 0) of grid cross at secondary lon-lat intersections.  0 means draw continuous gridlines
instead [0p].
.TP
.B MAP_GRID_PEN_PRIMARY
Pen attributes used to draw primary grid lines in dpi units or points (append p) [default,black].
.TP
.B MAP_GRID_PEN_SECONDARY
Pen attributes used to draw secondary grid lines in dpi units or points (append p) [thinner,black].
.TP
.B MAP_LABEL_OFFSET
Distance from base of axis annotations to the top of the axis label [8p].
.TP
.B MAP_LINE_STEP
Determines the maximum length (> 0) of individual straight line-segments when drawing arcuate lines  [0.75p]
.TP
.B MAP_LOGO
(BD(* \-U)) Specifies if a GMT logo with system timestamp should be plotted
at the lower left corner of the plot  [false].
.TP
.B MAP_LOGO_POS
(BD(* \-U)) Sets the justification and the position of the logo/timestamp box relative to the current plots lower left corner
of the plot  [BL/-54p/-54p].
.TP
.B MAP_ORIGIN_X
(BD(* \-X)) Sets the x-coordinate of the origin on the paper for a new plot [1i].
For an overlay, the default offset is 0i.
.TP
.B MAP_ORIGIN_Y
(BD(* \-Y)) Sets the y-coordinate of the origin on the paper for a new plot [1i].
For an overlay, the default offset is 0i.
.TP
.B MAP_POLAR_CAP
Controls the appearance of gridlines near the poles for all azimuthal projections and a few others in which
the geographic poles are plotted as points (Lambert Conic, Hammer, Mollweide, Sinusoidal, and van der Grinten).  Specify either none (in which
case there is no special handling) or IT(pc_lat)/IT(pc_dlon).  In that case, normal gridlines are only drawn between
the latitudes -IT(pc_lat)/+IT(pc_lat), and above those latitudes the gridlines are spaced at the (presumably coarser)
IT(pc_dlon) interval; the two domains are separated by a small circle drawn at the IT(pc_lat) latitude [85/90].
Note for r-theta (polar) projection where r = 0 is at the center of the plot the meaning of the cap is reversed, i.e.,
the default 85/90 will draw a r = 5 radius circle at the center of the map with less frequent radial lines there.
.TP
.B MAP_SCALE_HEIGHT
Sets the height (> 0) on the map of the map scale bars drawn by various programs [5p].
.TP
.B MAP_TICK_LENGTH_PRIMARY
The length of a primary major/minor tick-marks  [5p/2.5p].
If only the first value is set, the second is assumed to be 50% of the first.
.TP
.B MAP_TICK_LENGTH_SECONDARY
The length of a secondary major/minor tick-marks  [15p/3.75p].
If only the first value is set, the second is assumed to be 25% of the first.
.TP
.B MAP_TICK_PEN_PRIMARY
Pen attributes to be used for primary tick-marks in dpi units or points (append p) [thinner,black].
.TP
.B MAP_TICK_PEN_SECONDARY
Pen attributes to be used for secondary tick-marks in dpi units or points (append p) [thinner,black].
.TP
.B MAP_TITLE_OFFSET
Distance from top of axis annotations (or axis label, if present) to base of plot title [14p].
.TP
.B MAP_VECTOR_SHAPE
Determines the shape of the head of a vector.   Normally (i.e., for vector_shape = 0),
the head will be triangular, but can be changed to an arrow (1) or an open V (2).
Intermediate settings give something in between. Negative values (up to -2) are allowed as well  [0].
.TP
.B PROJ_AUX_LATITUDE
Only applies when geodesics are approximated by great circle distances on an equivalent sphere.  Select
from authalic, geocentric, conformal, meridional, parametric, or none [authalic].  When not none we
convert any latitude used in the great circle calculation to the chosen auxiliary latitude before
doing the distance calculation.  See also PROJ_MEAN_RADIUS.
.TP
.B PROJ_ELLIPSOID
The (case sensitive) name of the ellipsoid used for the map projections  [WGS-84].  Choose among:
.sp
#include "Ellipsoids.i"
.sp
Note that for some global projections, BD(GMT) may use a spherical approximation of the
ellipsoid chosen, setting the flattening to zero, and using a mean radius.
A warning will be given when this happens.
If a different
ellipsoid name than those mentioned here is given, BD(GMT) will attempt to parse the
name to extract the semi-major axis (IT(a) in m) and the flattening. Formats allowed are:
.br
.sp
    IT(a) implies a zero flattening
.br
.sp
    IT(a),IT(inv_f) where IT(inv_f) is the inverse flattening
.br
.sp
    IT(a),BD(b=)IT(b) where IT(b) is the semi-minor axis (in m)
.br
.sp
    IT(a),BD(f=)IT(f) where IT(f) is the flattening
.br
.sp
This way a
custom ellipsoid (e.g., those used for other planets) may be used. Further note that coordinate
transformations in BD(mapproject) can also specify specific datums; see the BD(mapproject)
man page for further details and how to view ellipsoid and datum parameters.
.TP
.B PROJ_LENGTH_UNIT
Sets the unit length.  Choose between BD(c)m, BD(i)nch, or BD(p)oint  [c (or i)].  Note
that, in BD(GMT), one point is defined as 1/72 inch (the IT(PostScript) definition), while it
is often defined as 1/72.27 inch in the typesetting industry.  There is no universal definition.
.TP
.B PROJ_MEAN_RADIUS
Applies when geodesics are approximated by great circle distances on an equivalent sphere or when
surface areas are computed.  Select from mean (R_1), authalic (R_2), volumetric (R_3), meridional, or quadratic [authalic].
See also PROJ_MEAN_RADIUS.
.TP
.B PROJ_SCALE_FACTOR
Changes the default map scale factor used for the Polar Stereographic [0.9996], UTM [0.9996], and Transverse Mercator [1] projections
in order to minimize areal distortion.  Provide a new scale-factor or leave as default.
.TP
.B PS_CHAR_ENCODING
(static) Names the eight bit character set being used for text in files and in command line parameters. This allows BD(GMT)
to ensure that the IT(PostScript) output generates the correct characters on the plot..  Choose from Standard, Standard+, ISOLatin1, ISOLatin1+,
and ISO-8859-x (where x is in the ranges [1,10] or [13,15]).  See Appendix F for details [CODE_SI (or CODE_US)].
.TP
.B PS_COLOR_MODEL
Determines whether IT(PostScript) output should use RGB, HSV, CMYK, or GRAY when specifying color [rgb].
Note if HSV is selected it does not apply to images which in that case uses RGB. When selecting GRAY, all
colors will be converted to gray scale using YIQ (television) conversion.
.TP
.B PS_COMMENTS
(static) If true we will issue comments in the IT(PostScript) file that explain the logic of operations.
These are useful if you need to edit the file and make changes; otherwise you can set it to
false which yields a somewhat slimmer IT(PostScript) file [false].
.TP
.B PS_COPIES
(BD(* \-c)) Number of plot copies to make  [1].
.TP
.B PS_IMAGE_COMPRESS
(static) Determines if IT(PostScript) images are compressed using the Run-Length Encoding scheme (rle),
Lempel-Ziv-Welch compression (lzw), or not at all (none) [lzw].
.TP
.B PS_LINE_CAP
Determines how the ends of a line segment will be drawn.  Choose among a IT(butt) cap (default)
where there is no projection beyond the end of the path, a IT(round) cap where a
semicircular arc with diameter equal to the line-width is drawn around the end points,
and IT(square) cap where a half square of size equal to the line-width extends beyond
the end of the path [butt].
.TP
.B PS_LINE_JOIN
Determines what happens at kinks in line segments.  Choose among a IT(miter) join
where the outer edges of the strokes for the two segments are extended until they
meet at an angle (as in a picture frame; if the angle is too acute, a bevel join is used
instead, with threshold set by BD(PS_MITER_LIMIT)), IT(round) join where a
circular arc is used to fill in the cracks at the kinks, and IT(bevel) join which
is a miter join that is cut off so kinks are triangular in shape [miter].
.TP
.B PS_MEDIA
Sets the physical format of the current plot paper [PAPER_SI (or PAPER_US)].  The following
formats (and their widths and heights in points) are recognized (Additional
site-specific formats may be specified in
the gmt_custom_media.conf file in BD($GMT_SHAREDIR)/conf or ~/.gmt; see that file for details):
.br
.sp
Media  width  height
.br
.sp
A0     2380   3368
.br
.sp
A1     1684   2380
.br
.sp
A2     1190   1684
.br
.sp
A3      842   1190
.br
.sp
A4      595    842
.br
.sp
A5      421    595
.br
.sp
A6      297    421
.br
.sp
A7      210    297
.br
.sp
A8      148    210
.br
.sp
A9      105    148
.br
.sp
A10      74    105
.br
.sp
B0     2836   4008
.br
.sp
B1     2004   2836
.br
.sp
B2     1418   2004
.br
.sp
B3     1002   1418
.br
.sp
B4      709   1002
.br
.sp
B5      501    709
.br
.sp
archA   648    864
.br
.sp
archB   864   1296
.br
.sp
archC  1296   1728
.br
.sp
archD  1728   2592
.br
.sp
archE  2592   3456
.br
.sp
flsa    612    936
.br
.sp
halfletter 396 612
.br
.sp
statement  396 612
.br
.sp
note    540    720
.br
.sp
letter  612    792
.br
.sp
legal   612   1008
.br
.sp
11x17   792   1224
.br
.sp
tabloid 792   1224
.br
.sp
ledger 1224    792
.br
.sp
For a completely custom format (e.g., for large format plotters) you may also
specify WxH, where W and H are in points unless you append a unit
to each dimension (BD(c), BD(i), BD(m) or BD(p) [Default]).
.TP
.B PS_MITER_LIMIT
Sets the threshold angle in degrees (integer in range [0,180]) used for mitered joins only.
When the angle between joining line segments is smaller than the threshold the corner will
be bevelled instead of mitered.
The default threshold is 35 degrees.
Setting the threshold angle to 0 implies the IT(PostScript) default of about 11 degrees.
Setting the threshold angle to 180 causes all joins to be beveled.
.TP
.B PS_PAGE_COLOR
Sets the color of the imaging background, i.e., the paper  [white].
.TP
.B PS_PAGE_ORIENTATION
(BD(* \-P)) Sets the orientation of the page.  Choose portrait or landscape  [landscape].
.TP
.B PS_SCALE_X
Global x-scale (> 0) to apply to plot-coordinates before plotting.  Normally used to shrink
the entire output down to fit a specific height/width  [1.0].
.TP
.B PS_SCALE_Y
Global y-scale (> 0) to apply to plot-coordinates before plotting.  Normally used to shrink
the entire output down to fit a specific height/width  [1.0].
.TP
.B PS_TRANSPARENCY
Sets the transparency mode to use when preparing PS for rendering to PDF.
Choose from Color, ColorBurn, ColorDodge, Darken, Difference, Exclusion, HardLight, Hue,
Lighten, Luminosity, Multiply, Normal, Overlay, Saturation, SoftLight, and Screen [Normal].
.TP
.B TIME_EPOCH
Specifies the value of the calendar and clock at the origin (zero point) of relative time units (see BD(TIME_UNIT)).
It is a string of the form yyyy-mm-ddT[hh:mm:ss] (Gregorian) or yyyy-Www-ddT[hh:mm:ss] (ISO)
Default is 1970-01-01T00:00:00, the origin of the UNIX time epoch.
.TP
.B TIME_INTERVAL_FRACTION
Determines if partial intervals at the start and end of an axis should be annotated.  If the range of the partial
interval exceeds the specified fraction of the normal interval stride we will place the annotation centered on the
partial interval  [0.5].
.TP
.B TIME_IS_INTERVAL
Used when input calendar data should be truncated and adjusted to the middle of the relevant interval.
In the following discussion, the unit BD(u) can be one of these time units: (BD(y) year, BD(o) month,
BD(u) ISO week, BD(d) day, BD(h) hour, BD(m) minute, and BD(s) second).  BD(TIME_IS_INTERVAL)
can have any of the following three values: (1) OFF [Default].  No adjustment, time is decoded as given.
(2) +IT(n)BD(u).  Activate interval adjustment for input by truncate to previous whole number of IT(n)
units and then center time on the following interval.  (3) -IT(n)BD(u).  Same, but center time on the
previous interval.  For example, with BD(TIME_IS_INTERVAL) = +1o, an input data string like 1999-12 will
be interpreted to mean 1999-12-15T12:00:00.0 (exactly middle of December), while if BD(TIME_IS_INTERVAL) = off
then that date is interpreted to mean 1999-12-01T00:00:00.0 (start of December)  [off].
.TP
.B TIME_LANGUAGE
Language to use when plotting calendar items such as months and days.  Select from:
.br
.sp
BR  Brazilian Portuguese
.br
.sp
CN1 Simplified Chinese
.br
.sp
CN2 Traditional Chinese
.br
.sp
DE  German
.br
.sp
DK  Danish
.br
.sp
EH  Basque
.br
.sp
ES  Spanish
.br
.sp
FI  Finnish
.br
.sp
FR  French
.br
.sp
GR  Greek
.br
.sp
HI  Hawaiian
.br
.sp
HU  Hungarian
.br
.sp
IE  Irish
.br
.sp
IL  Hebrew
.br
.sp
IS  Icelandic
.br
.sp
IT  Italian
.br
.sp
JP  Japanese
.br
.sp
NL  Dutch
.br
.sp
NO  Norwegian
.br
.sp
PL  Polish
.br
.sp
PT  Portuguese
.br 
.sp
RU  Russian
.br
.sp
SE  Swedish
.br
.sp
SG  Scottish Gaelic
.br
.sp
TO  Tongan
.br 
.sp
TR  Turkish
.br
.sp
UK  British English
.br
.sp
US  US English
.br
.sp
If your language is not supported, please examine the BD($GMT_SHAREDIR)/time/us.d file and
make a similar file.  Please submit it to the BD(GMT) Developers for official inclusion. 
Custom language files can be placed in directories BD($GMT_SHAREDIR)/time or ~/.gmt.
Note: Some of these languages may require you to also change the BD(PS_CHAR_ENCODING) setting.
.TP
.B TIME_SYSTEM
Shorthand for a combination of BD(TIME_EPOCH) and BD(TIME_UNIT), specifying
which time epoch the relative time refers to and what the units are.
Choose from one of the preset systems below (epoch and units are indicated):
.br
.sp
JD    -4713-11-25T12:00:00  d  (Julian Date)
.br
.sp
MJD    1858-11-17T00:00:00  d  (Modified Julian Date)
.br
.sp
J2000  2000-01-01T12:00:00  d  (Astronomical time)
.br
.sp
S1985  1985-01-01T00:00:00  s  (Altimetric time)
.br
.sp
UNIX   1970-01-01T00:00:00  s  (UNIX time)
.br
.sp
RD0001 0001-01-01T00:00:00  s
.br
.sp
RATA   0000-12-31T00:00:00  d
.br
.sp
This parameter is not stored in the BD(gmt.conf) file but is translated to the respective
values of BD(TIME_EPOCH) and BD(TIME_UNIT).
.TP
.B TIME_UNIT
Specifies the units of relative time data since epoch (see BD(TIME_EPOCH)).
Choose y (year - assumes all years are 365.2425 days), o (month - assumes
all months are of equal length y/12), d (day), h (hour), m (minute), or s (second)  [s].
.TP
.B TIME_WEEK_START
When weeks are indicated on time axes, this parameter determines the first day of the week
for Gregorian calendars.  (The ISO weekly calendar always begins weeks with Monday.)
[Monday (or Sunday)].
.TP
.B TIME_Y2K_OFFSET_YEAR
When 2-digit years are used to represent 4-digit years (see various BD(FORMAT_DATE)s), BD(TIME_Y2K_OFFSET_YEAR)
gives the first year in a 100-year sequence.  For example, if BD(TIME_Y2K_OFFSET_YEAR) is 1729, then numbers
29 through 99 correspond to 1729 through 1799, while numbers 00 through 28 correspond to 1800 through
1828. [1950].
/* Commented out for now
.TP
.B TIME_LEAP_SECONDS
Set to true if your time coordinate values require the increased complexity of keeping track of leap seconds [false].
*/
.SH "SEE ALSO"
.IR gmt (1),
.IR gmtdefaults (1),
.IR gmtcolors (5),
.IR gmtget (1),
.IR gmtset (1)
