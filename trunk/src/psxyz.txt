#include "common_options.txt"
.TH PSXYZ 1 MANDATE GMT_STRING "Generic Mapping Tools"
#define PARAMS 2BD(p)/9BD(p)/7BD(p)
#define LEN_1 1.25
#define OPT_1	OPT(Jx)1.25BD(c) OPT(Jz)0.125BD(c) OPT(So)1.25BD(c)
.SH NAME
psxyz \- Plot lines, polygons, and symbols in 3-D
.SH SYNOPSIS
BD(psxyz) IT(files) GMT_J_OPT GMT_Jz_OPT GMT_Rgeoz_OPT
[ GMT_B_OPT ] [ OPT(C)IT(cptfile) ] [ OPT(D)IT(dx)/IT(dy)[IT(dz)] ]
[ OPT(G)IT(fill) ] [ OPT(I)IT(intens) ] [ GMT_K_OPT ] [ OPT(L) ]
[ OPT(N) ] [ GMT_O_OPT ] [ GMT_P_OPT ] [ OPT(Q) ] [ OPT(S)[IT(symbol)][IT(size)|BD(+s)IT(scaling)] ] [ GMT_U_OPT ]
[ GMT_V_OPT ] [ OPT(W)[BD(-)|BD(+)][IT(pen)] ] [ GMT_X_OPT ] [ GMT_Y_OPT ] [ GMT_a_OPT ] 
[ GMT_bi_OPT ] [ GMT_c_OPT ] [ GMT_fi_OPT ] [ GMT_g_OPT ] [ GMT_h_OPT ] [ GMT_i_OPT ]
[ GMT_p_OPT ] [ GMT_t_OPT ] [ GMT_colon_OPT ]
.SH DESCRIPTION
BD(psxyz) reads (x,y,z) triplets from IT(files) [or standard input] and
generates IT(PostScript) code that will plot lines, polygons, or symbols at those locations in 3-D.
If a symbol is selected and no symbol size given, then BD(psxyz) will interpret the fourth column of the
input data as symbol size.  Symbols whose IT(size) is <= 0 are skipped.
If no symbols are specified then the symbol code (see OPT(S) below)
must be present as last column in the input.
If OPT(S) is not used, a line connecting the data points will be drawn instead.
To explicitly close polygons, use OPT(L).  Select a fill with OPT(G).
If OPT(G) is set, OPT(W) will control whether the polygon outline is drawn or not.
If a symbol is selected, OPT(G) and OPT(W) determines the fill and outline/no outline, respectively.
The IT(PostScript) code is written to standard output.
.SH REQUIRED ARGUMENTS
.TP
IT(files)
List one or more file-names. If no files are given, BD(psxyz) will read standard input.
#include "explain_-J.txt"
#include "explain_-Jz.txt"
#include "explain_-R.txt"
#include "explain_-Rz.txt"
.SH OPTIONAL ARGUMENTS
No space between the option flag and the associated arguments.
#include "explain_-B.txt"
.TP
OPT(C)IT(cptfile)
Give a color palette file.  If OPT(S) is set, let symbol fill color be determined by the
t-value in the fourth column. Additional fields are shifted over by one column
(optional size would be in 5th rather than 4th field, etc.).
If OPT(S) is not set, then BD(psxyz) expects the user to supply a multisegment file
(where each segment header contains a OPT(Z)IT(val) string.  The IT(val)
will control the color of the line or polygon (if OPT(L) is set) via the cpt file.
.TP
OPT(D)IT(dx)/IT(dy)[IT(dz)]
Offset the plot symbol or line locations by the given amounts IT(dx/dy)[IT(dz)] [Default is no offset].
.TP
OPT(G)IT(fill)
Select color or pattern for filling of symbols or polygons [Default is no fill].
(See SPECIFYING FILL below).
.br
Note that BD(psxyz) will search for OPT(G) and OPT(W)
strings in all the segment headers and let any values thus found over-ride the command line settings.
.TP
OPT(I)IT(intens)
Use the supplied IT(intens) value (nominally in the -1 to + 1 range) to modulate the fill color by simulating illumination [none].
#include "explain_-K.txt"
.TP
OPT(L)
Force closed polygons: connect the endpoints of the line-segment(s) and draw polygons.
Also, in concert with OPT(C) and any OPT(Z) settings in the headers will use the implied
color for polygon fill [Default is polygon pen color].
OPT(N)
Do NOT skip symbols that fall outside map border [Default plots points inside border only].
#include "explain_-O.txt"
#include "explain_-P.txt"
.TP
OPT(Q)
Turn off the automatic sorting of items based on their distance from the viewer.  The default is
to sort the items so that items in the foreground are plotted after items in the background.
.TP
OPT(S)[IT(symbol)][IT(size)|BD(+s)IT(scaling)]
Plot symbols.  If present, IT(size) is symbol size in the unit set in BD(gmt.conf)
(unless BD(c), BD(i), or BD(p) is appended).
If the symbol code (see below) is not given it will be read from the last column in the input data;
this cannot be used in conjunction with OPT(b).  Optionally, append
BD(c), BD(i), or BD(p) to indicate that the size information in the
input data is in units of cm, inch, or point, respectively [Default is BD(PROJ_LENGTH_UNIT)].
Note: if you give both size and symbol via the input file you must use BD(PROJ_LENGTH_UNIT) to
indicate the units used for the symbol size.  If the symbol size is expected via the 4th data column
then you may convert those values to symbol sizes by appending BD(+s)IT(scale)[/IT(origin)][BD(l)]
which will compute size = (data - IT(origin)) * IT(scale), where IT(origin) defaults to 0.  If BD(l)
is appended we take log10 of data and IT(origin) first [IT(origin) then defaults to 1].
The uppercase symbols BD(A), BD(C), BD(D), BD(G), BD(H), BD(I), BD(N), BD(S), BD(T)
are normalized to have the same area as a circle with diameter IT(size),
while the size of the corresponding lowercase symbols refers to the diameter of a circumscribed circle.
Choose between these symbol codes:
.TP
OPT(S-)
x-dash (-).  IT(size) is the length of a short horizontal (x-dir) line segment.
.TP
OPT(S+)
plus (+).  IT(size) is diameter of circumscribing circle.
.br
.TP
OPT(Sa)
st\fBa\fPr.  IT(size) is diameter of circumscribing circle.
.TP
OPT(Sb)
Vertical BD(b)ar extending from IT(base) to y.  IT(size) is bar width. Append BD(u)
if IT(size) is in x-units [Default is plot-distance units]. By default,
IT(base) = ymin.  Append BD(b)IT(base) to change this value.
.TP
OPT(SB)
Horizontal BD(b)ar extending from IT(base) to x.  IT(size) is bar width. Append BD(u)
if IT(size) is in y-units [Default is plot-distance units]. By default,
IT(base) = xmin.  Append BD(b)IT(base) to change this value.
.TP
OPT(Sc)
BD(c)ircle.  IT(size) is diameter of circle.
.TP
OPT(Sd)
BD(d)iamond.  IT(size) is diameter of circumscribing circle.
.TP
OPT(Se)
BD(e)llipse.  Direction (in degrees counter-clockwise from horizontal), major_axis, and minor_axis must
be found in columns 4, 5, and 6.
.TP
OPT(SE)
Same as OPT(Se), except azimuth (in degrees east of north) should be given instead of direction.  The azimuth will
be mapped into an angle based on the chosen map projection (OPT(Se) leaves the directions
unchanged.)  Furthermore, the axes lengths must be given in km instead of plot-distance units.  An exception occurs for
a linear projection in which we assume the ellipse axes are given in the same units as OPT(R).
.TP
OPT(Sf)
BD(f)ront.  OPT(Sf)IT(gap/size)[IT(dir)][IT(type)][:IT(offset)].  Supply distance gap between symbols and symbol size.
If IT(gap) is negative, it is interpreted to mean the number of symbols along the front instead.  Append IT(dir) to plot symbols
on the BD(l)eft or BD(r)ight side of the front [Default is centered].  Append IT(type) to specify which symbol
to plot: BD(b)ox, BD(c)ircle, BD(f)ault, BD(s)lip, or BD(t)riangle.  [Default is fault].
Slip means left-lateral or right-lateral strike-slip arrows (centered is not an option).  Append :IT(offset) to offset
the first symbol from the beginning of the front by that amount [Default is 0].
.TP
OPT(Sg)
octaBD(g)on.  IT(size) is diameter of circumscribing circle.
.TP
OPT(Sh)
BD(h)exagon.  IT(size) is diameter of circumscribing circle.
.TP
OPT(Si)
BD(i)nverted triangle.  IT(size) is diameter of circumscribing circle.
.TP
OPT(Sj)
Rotated rectangle.  Direction (in degrees counter-clockwise from horizontal), x-dimension, and y-dimension must be found in columns 4, 5, and 6.
.TP
OPT(SJ)
Same as OPT(Sj), except azimuth (in degrees east of north) should be given instead of direction.  The azimuth will
be mapped into an angle based on the chosen map projection (OPT(Sj) leaves the directions
unchanged.)  Furthermore, the dimensions must be given in km instead of plot-distance units.  An exception occurs for
a linear projection in which we assume the dimensions are given in the same units as OPT(R).
.TP
OPT(Sk)
BD(k)ustom symbol.  Append <name>/IT(size), and we will look for a definition file called
<name>.def in (1) the current directory or (2) in ~/.gmt or (3) in BD($GMT_SHAREDIR)/custom.  The symbol as defined
in that file is of size 1.0 by default; the appended IT(size) will scale symbol accordingly.
The symbols are plotted in the IT(x-y) plane.
Users may add their own custom *.def files; see CUSTOM SYMBOLS in the BD(psxy) man page.
.TP
OPT(Sl)
BD(l)etter or text string (less than 64 characters).  Give size, and append /IT(string) after the size.
Note that the size is only approximate; no individual scaling
is done for different characters.  Remember to escape special characters like *.  Optionally, you may append %IT(font)
to select a particular font [Default is BD(FONT_ANNOT_PRIMARY)].
.TP
OPT(Sm)
BD(m)ath angle arc, optionally with one or two arrow heads.  The IT(size) is the radius of the arc.
Start and stop directions (in degrees counter-clockwise from horizontal) for arc
must be found in columns 4 and 5.  Use OPT(Smf) to add arrow head at first angle, OPT(Sml) for arrow head at last angle, and OPT(Smb) for both
[Default is no arrow heads].
.TP
OPT(Sn)
peBD(n)tagon.  IT(size) is diameter of circumscribing circle.
.TP
OPT(So)
cBD(o)lumn (3-D) extending from IT(base) to z.  IT(size) sets base width (Use IT(xsize/ysize) if not the same).  Append BD(u) if IT(size) is in x-units
[Default is plot-distance units].  If no IT(size) is given we expect both IT(xsize) and IT(ysize) as two extra data columns.
By default, IT(base) = 0.  Append bIT(base) to change this value.  The facet colors will be modified to simulate shading.
Use OPT(SO) to disable such 3-D illumination.
.TP
OPT(Sp)
BD(p)oint.  No size needs to be specified (1 pixel is used).
.TP
OPT(Sq)
BD(q)uoted line, i.e., lines with annotations such as contours.
It is assumed that each individual line has a constant IT(z) level (i.e., each line must lie in the IT(x-y) plane).
Append [BD(d|f|n|l|x)]IT(info)[:IT(labelinfo)].
#include "explain_contlabel.txt"
.sp
.RS
The optional IT(labelinfo) controls the specifics of the label formatting and consists of a concatenated string
made up of any of the following control arguments:
.RE
#include "explain_labelinfo.txt"
.TP
OPT(Sr)
BD(r)ectangle.  No size needs to be specified, but the x- and y-dimensions must be found in columns
4 and 5.
.TP
OPT(Ss)
BD(s)quare.  IT(size) is diameter of circumscribing circle.
.TP
OPT(St)
BD(t)riangle.  IT(size) is diameter of circumscribing circle.
.TP
OPT(Su)
cBD(u)be (3-D).  IT(size) sets length of all sides. Append BD(u) if IT(size)
is in x-units [Default is plot-distance units].  The facet colors will be modified to simulate shading.
Use OPT(SU) to disable such 3-D illumination.
.TP
OPT(Sv)
BD(v)ector.  Direction and length must be found in columns 4 and 5.
IT(size), if present, will be interpreted as IT(vectorwidth/headlength/headwidth)
[Default attributes are PARAMS].
By default arrow attributes remains invariant to the length
of the arrow.  To have the size of the vector scale down with decreasing size,
append BD(n)IT(norm), where vectors shorter than IT(norm) will have their
attributes scaled by length/IT(norm).
To center vector on balance point, use OPT(Svb); to align point with the vector head,
use OPT(Svh); to align point with the vector tail, use OPT(Svt) [Default].
To give the head point's \fIx\fP, \fIy\fP, \fIz\fP coordinates\"'
instead of direction and length, use OPT(Svs).  Upper case BD(B), BD(H), BD(T), BD(S) will draw a double-headed vector [Default is single head].
.TP
OPT(SV)
Same as OPT(Sv), except azimuth should be given instead of direction.  The azimuth will
be mapped into an angle based on the chosen map projection (OPT(Sv) leaves the directions
unchanged.)
.TP
OPT(Sw)
pie BD(w)edge.  Start and stop directions (in degrees counter-clockwise from horizontal) for pie slice
must be found in columns 4 and 5.
.TP
OPT(SW)
Same as OPT(Sw), except azimuths (in degrees east of north) should be given instead of the two directions.  The azimuths will
be mapped into angles based on the chosen map projection (OPT(Sw) leaves the directions unchanged.)
.TP
OPT(Sx)
cross (x).  IT(size) is diameter of circumscribing circle.
.br
.TP
OPT(Sy)
y-dash (|).  IT(size) is the length of a short horizontal (y-dir) line segment.
.TP
OPT(Sz)
zdash.  IT(size) is the length of a short vertical (z-dir) line segment.
#include "explain_-U.txt"
#include "explain_-V.txt"
.TP
OPT(W)[BD(-)|BD(+)][IT(pen)]
Set pen attributes for lines or the outline of symbols [Defaults: width = default, color = black, style = solid].
A leading BD(+) will use the lookup color (via OPT(C)) for both symbol fill and outline pen color, while a leading
BD(-) will set outline pen color and turn off symbol fill.
(See SPECIFYING PENS below).
#include "explain_-XY.txt"
#include "explain_-aspatial.txt"
#include "explain_-bi.txt"
[Default is the required number of columns given the chosen settings].
#include "explain_-c.txt"
#include "explain_-f.txt"
#include "explain_-g.txt"
The OPT(g) option is ignored if OPT(S) is set.
#include "explain_-h.txt"
#include "explain_-icols.txt"
.TP
#include "explain_perspective.txt"
#include "explain_-t.txt"
#include "explain_colon.txt"
#include "explain_help.txt"
#include "explain_pen.txt"
#include "explain_fill.txt"
#include "explain_font.txt"
#include "explain_color.txt"
.SH EXAMPLES
To plot blue columns (width = LEN_1 cm) at the positions listed in the file heights.xyz on a
3-D projection of the space (0\-10), (0\-10), (0\-100),  with tickmarks every 2, 2, and 10,
viewing it from the southeast at 30 degree elevation, use:
.br
.sp
psxyz heights.xyz -R0/10/0/10/0/100 OPT_1
-Gblue -B2:XLABEL:/2:YLABEL:/10:ZLABEL::."3-D PLOT":15 -p135/30 -Uc -W -P > heights.ps
.SH SEGMENT HEADER PARSING
Segment header records may contain one of more of the following options:
.br
OPT(G)IT(fill) Use the new IT(fill) and turn filling on
.br
OPT(G-) Turn filling off
.br
OPT(G) Revert to default fill (none if not set on command line)
.br
OPT(W)IT(pen) Use the new IT(pen) and turn outline on
.br
OPT(W) Revert to default pen ()MAP_DEFAULT_PENBD( if not set on command line)
.br
OPT(W-) Turn outline off
.br
OPT(Z)IT(zval) Obtain fill via cpt lookup using z-value IT(zval)
.br
OPT(ZNaN) Get the NaN color from the cpt file
.SH CUSTOM SYMBOLS
BD(psxyz) allows users to define and plot their own custom symbols.
This is done by encoding the symbol using our custom symbol macro code described in Appendix N.
Put all the macro codes for your new symbol in a file whose extension must be .def; you may then address
the symbol without giving the extension (e.g., the symbol file tsunami.def is used by specifying OPT(Sk)IT(tsunami/size).
The definition file can contain any number of plot code records, as well as blank lines and comment lines (starting with #).
BD(psxyz) will look for the definition files in (1) the current directory, (2) the ~/.gmt
directory, and (3) the BD($GMT_SHAREDIR)/custom directory, in that order.
Freeform polygons (made up of straight line segments and arcs of circles) can be designed - these polygons can be
painted and filled with a pattern.  Other standard geometric symbols can also be used.
.SH BUGS
No hidden line removal is employed for polygons and lines.  Symbols, however, are first sorted
according to their distance from the viewpoint so that nearby symbols will overprint more distant
ones should they project to the same x,y position.
.br
BD(psxyz) cannot handle filling of polygons that contain the south or north pole.  For such a polygon,
make a copy and split it into two and make each explicitly contain the polar point.  The two polygons
will combine to give the desired effect when filled; to draw outline use the original polygon.
.br
The OPT(N) option does not adjust the BoundingBox information so you may
have to post-process the IT(PostScript) output with BD(ps2raster -A) to obtain
the correct BoundingBox.
.SH "SEE ALSO"
.IR gmt (1),
.IR gmt.conf (5),
.IR gmtcolors (5),
.IR psbasemap (1),
.IR psxy (1)
