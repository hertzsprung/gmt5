#include "common_options.txt"
.TH GRDBLEND 1 MANDATE GMT_STRING "Generic Mapping Tools"
.SH NAME
grdblend \- Blend several partially over-lapping grids into one large grid
.SH SYNOPSIS
BD(grdblend) IT(blendfile) OPT(G)IT(grdfile) GMT_I_OPT GMT_Rgeo_OPT 
[ OPT(C)BD(f)|BD(l)|BD(o)|BD(u) ] [ OPT(N)IT(nodata) ] [ OPT(Q) ] [ OPT(Z)IT(scale) ] 
[ GMT_V_OPT ] [ OPT(W) ] [ GMT_fi_OPT ] [ GMT_r_OPT ]
.SH DESCRIPTION
BD(grdblend) reads a listing of grid files and blend parameters and
creates a binary grid file by blending the other grids using cosine-taper weights.
BD(grdblend) will report if some of the nodes are not filled in with
data.  Such unconstrained nodes are set to a value specified by the user [Default is NaN].
Nodes with more than one value will be set to the weighted average value. Any input grid
that does not share the final output grid's node registration and grid spacing will automatically\"'
be resampled via calls to grdsample.
.SH REQUIRED ARGUMENTS
.TP
IT(blendfile)
ASCII file with one record per grid file to include in the blend.  Each record must contain three items, separated by spaces or tabs:
the gridfile name, the OPT(R)-setting for the interior region, and the relative weight IT(wr).
In the combined weighting scheme, this grid will be given zero weight outside its domain, weight = IT(wr)
inside the interior region, and a 2-D cosine-tapered weight between those end-members in the boundary strip.
However, if a negative IT(wr) is given then the sense of tapering is inverted (i.e., zero weight inside its
domain).  If the inner region should instead exactly match the grid region then specify a - instead of the OPT(R)-setting.
Finally, if only a gridfile name is found we will use the grid domain as inner region and set weight to 1.
If the ASCII file is not given BD(grdblend) will read standard input.
.TP
OPT(G)IT(grdfile)
IT(grdfile) is the name of the binary output grid file.
(See GRID FILE FORMATS below).
#include "explain_-I.txt"
#include "explain_-R.txt"
.SH OPTIONAL ARGUMENTS
.TP
OPT(C)
Clobber mode: Instead of blending, simply pick the value of one of the grids that covers a node.
Select from the following modes: BD(f) for the first grid to visit a node; BD(o) for the last
grid to visit a node; BD(l) for the grid with the lowest value, and BD(u) for the grid with
the uppermost value.  For modes BD(f) and BD(o) the ordering of grids in the IT(blendfile) will
dictate which grid contributes to the final result.
Weights and cosine tapering are not considered when clobber mode is active.
.TP
OPT(N)IT(nodata)
No data.  Set nodes with no input grid to this value [Default is NaN].
.TP
OPT(Q)
Create a header-less grid file suitable for use with BD(grdraster).  Requires that the output grid file
is a native format (i.e., not netCDF).
#include "explain_-V.txt"
.TP
OPT(W)
Do not blend, just output the weights used for each node.  This option is valid when only one
input grid is provided [Default makes the blend].
.TP
OPT(Z)IT(scale)
Scale output values by IT(scale) before writing to file. [1].
#include "explain_-f.txt"
#include "explain_nodereg.txt"
#include "explain_help.txt"
#include "explain_grd_output.txt"
#include "explain_grd_coord.txt"
.SH EXAMPLES
To create a grid file from the four grid files piece_?.nc, make the blendfile like this
.br
.sp
piece_1.nc	-R<subregion_1> 1
.br
piece_2.nc	-R<subregion_2> 1
.br
piece_3.nc	-R<subregion_3> 1
.br
piece_4.nc	-R<subregion_4> 1
.br
.sp
Then run
.br
.sp
BD(grdblend) blend.job OPT(G)blend.nc OPT(R)<full_region> OPT(I)<dx/dy> BD(-V)
.SH "SEE ALSO"
.IR gmt (1),
.IR grd2xyz (1),
.IR grdedit (1)
.IR grdraster (1)
