.SH GRID FILE FORMATS
By default BD(GMT) writes out grid as single precision floats in a COARDS-complaint netCDF file format.
However, BD(GMT) is able to produce grid files in many other commonly used grid file formats and also facilitates so called "packing" of grids,
writing out floating point data as 2- or 4-byte integers. To specify the precision, scale and offset, the user should add the suffix
GMT_GRD_SUFFIX, where IT(id) is a two-letter identifier of the grid type and precision, and IT(scale) and IT(offset) are optional scale factor
and offset to be applied to all grid values, and IT(nan) is the value used to indicate missing data.
When reading grids, the format is generally automatically recognized. If not, the same suffix can be added to input grid file names.
See BD(grdreformat)(1) and Section 4.17 of the GMT Technical Reference and Cookbook for more information.
.P
When reading a netCDF file that contains multiple grids, BD(GMT) will read, by default, the first 2-dimensional grid that can find in that
file. To coax BD(GMT) into reading another multi-dimensional variable in the grid file, append BD(?)IT(varname) to the file name, where
IT(varname) is the name of the variable. Note that you may need to escape the special meaning of BD(?) in your shell program
by putting a backslash in front of it, or by placing the filename and suffix between quotes or double quotes.
The BD(?)IT(varname) suffix can also be used for output grids to specify a variable name different from the default: "z".
See BD(grdreformat)(1) and Section 4.18 of the GMT Technical Reference and Cookbook for more information,
particularly on how to read splices of 3-, 4-, or 5-dimensional grids.
