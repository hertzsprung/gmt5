#include "common_options.txt"
.TH PSTEXT 1 MANDATE GMT_STRING "Generic Mapping Tools"
#define CLEARANCE_SI 0.1\fBc\fP/0.1\fBc\fP
#define CLEARANCE_US 0.0254\fBi\fP/0.0254\fBi\fP
.SH NAME
pstext \- To plot text strings on maps
.SH SYNOPSIS
\fBpstext\fP \fItextfile\fP GMT_J_OPT GMT_Rgeo_OPT 
[ GMT_B_OPT ] [ OPT(C)\fIdx/dy\fP ]  
[ OPT(D)[\fBj\fP]\fIdx\fP[/\fIdy\fP][\fBv\fP[\fIpen\fP] ] [ GMT_E_OPT ] 
[ OPT(G)\fIcolor\fP ] [ GMT_H_OPT ] [ GMT_Jz_OPT ] [ GMT_K_OPT ] [ OPT(L) ] [ OPT(N) ] [ GMT_O_OPT ] [ GMT_P_OPT ] 
[ OPT(S)\fIpen\fP ] [ GMT_U_OPT ] [ GMT_V_OPT ] [ OPT(W)[\fIcolor\fP,][\fBo\fP|\fBO\fP|\fBc\fP|\fBC\fP[\fIpen\fP]] ] 
[ GMT_X_OPT ] [ GMT_Y_OPT ] [ OPT(Z)[\fIzlevel\fP|\fB+\fP] ] [ GMT_c_OPT ] [ GMT_t_OPT ] [ GMT_mo_OPT ]
.SH DESCRIPTION
\fBpstext\fP plots text strings of variable size, font type, and orientation.
Various map projections are provided, with the option to draw and annotate the
map boundaries. \fIPostScript\fP code is written to standard output.  Greek
characters, subscript, superscript, and small caps are supported as follows:
The sequence @~ toggles between the selected font and Greek (Symbol).
@%\fIno\fP% sets the font to \fIno\fP; @%% resets the font to the starting font,
@- toggles subscripts on/off, @+ toggles superscript on/off, @# toggles small
caps on/off,  @;\fIcolor\fP; changes the font color (@;; resets it), @:\fIsize\fP:
changes the font size (@:: resets it), and @_ toggles underline on/off.
@@ prints the @ sign.  @e, @o, @a, @E, @O, @A give the accented
Scandinavian characters.  Composite characters (overstrike) may be indicated with
the @!<char1><char2> sequence, which will print the two characters on top of
each other.  To learn the octal codes for symbols not available on the keyboard
and some accented European characters, see Section 4.16 and Appendix F in the
\fBGMT\fP Technical Reference and Cookbook.  Note that \fBCHAR_ENCODING\fP must be
set to an extended character set in your \.gmtdefaults4 file in order to use the accented characters.
Using the OPT(W) option, a colored rectangle underlying the text may
be plotted  (Does not work for strings with sub/super scripts, symbols, or composite
characters, except in paragraph mode (OPT(m))).
.TP
\fItextfile\fP
This file contains 1 or more records with (\fIx, y, size, angle, fontno, justify, text\fP).
If no file is given, \fBpstext\fP will read standard input.
\fIsize\fP is text size in points, \fIangle\fP is measured in degrees counter-clockwise from horizontal, 
\fIfontno\fP sets the font type, \fIjustify\fP sets the alignment. 
If \fIfontno\fP is not an integer, then it is taken to be a text string with the desired fontname.  See the \fBgmtdefaults\fP man page
for names and numbers of available fonts (or run \fBpstext \-L\fP).  The alignment refers to the
part of the text string that will be mapped onto the (\fIx,y\fP) point.  Choose a 2 character combination
of L, C, R (for left, center, or right) and T, M, B for top, middle, or bottom. e.g., BL for lower left.
#include "explain_-J_short.txt"
#include "explain_-Jz.txt"
#include "explain_-R.txt"
.SH OPTIONS
No space between the option flag and the associated arguments.
#include "explain_-B_short.txt"
.TP
OPT(C)
Sets the clearance between the text and the surrounding box [15%].
Only used if OPT(W) is specified.  Append the unit you want (\fBc\fPm, \fBi\fPnch, \fBm\fPeter.
or \fBp\fPoint; if not given we consult \fBMEASURE_UNIT\fP) or % for a percentage of the font size.
.TP
OPT(D)
Offsets the text from the projected (\fIx,y\fP) point by \fIdx,dy\fP [0/0].  If \fIdy\fP is not
specified then it is set equal to \fIdx\fP.
Use \fB-Dj\fP to offset the text away from the point instead (i.e. the text's justification\"'
will determine the direction of the shift).  Optionally, append \fBv\fP which will draw a line
from the original point to the shifted point; append a \fIpen\fP to change the attributes for this line.
(See SPECIFYING PENS below).
#include "explain_-E.txt"
(Not implemented for paragraph mode).
.TP
OPT(G)
Sets the shade or color used for drawing the text  [Default is BASEMAP_FRAME_RGB, the current frame color (by default black)]
(See SPECIFYING COLOR below).
#include "explain_-H.txt"
#include "explain_-K.txt"
.TP
OPT(L)
Lists the font-numbers and font-names available, then exits.
.TP
OPT(N)
Do NOT clip text at map boundaries [Default will clip].
#include "explain_-O.txt"
#include "explain_-P.txt"
.TP
OPT(S)
Draw text outline. Append pen attributes.
(Not implemented for paragraph mode).
#include "explain_-U.txt"
#include "explain_-V.txt"
.TP
OPT(W)
Paint a rectangle beneath the text string.  Set color [Default is no fill].
Append \fBo\fP to draw rectangle outline, add a \fIpen\fP to specify pen attributes [width = 1, color = black,
texture = solid].  use a comma to separate the fill information from the outline information if both are present.
Choose upper case \fBO\fP to get a rounded rectangle.
Choose lower case \fBc\fP to get a concave rectangle (only in paragraph mode).
Choose upper case \fBC\fP to get a convex rectangle (only in paragraph mode).
(See also SPECIFYING PENS and SPECIFYING COLOR below).
#include "explain_-XY.txt"
.TP
OPT(Z)
For 3-D projections:  Sets the z-level of the basemap [0].  If OPT(Z+) is given we expect each item
to have its own level given in the 3rd column, and OPT(N) is implicitly set.
(Not implemented for paragraph mode).
#include "explain_-t.txt"
#include "explain_-c.txt"
.TP
OPT(m)
Paragraph mode.  Files must be multiple segment files.  Segments are separated by
a special record whose first character must be \fIflag\fP [Default is '>'].
Starting in the 3rd column, we expect to find information pertaining to the
typesetting of a text paragraph (the remaining lines until next segment header).
The information expected is (x y size angle fontno justify linespace parwidth parjust),
where \fIx y size angle fontno justify\fP are defined above, while \fIlinespace\fP
and \fIparwidth\fP are the linespacing and paragraph width, respectively.  The justification
of the text paragraph is governed by \fIparjust\fP which may be \fBl\fP(eft), \fBc\fP(enter),
\fBr\fP(ight), or \fBj\fP(ustified).  The segment header is followed by one or more lines
with paragraph text.  Text may contain the escape sequences discussed above.
Separate paragraphs with a blank line.
#include "explain_pen.txt"
#include "explain_color.txt"
.SH EXAMPLES
To plot the outlines of the text strings stored in the file text.d on a Mercator plot with
the given specifications, use
.br
.sp
\fBpstext\fP text.d OPT(R)-30/30/-10/20 OPT(Jm)0.1\fBi\fP OPT(P) OPT(B)5 OPT(S)0.5\fBp\fP > plot.ps
.br
.sp
To add a typeset figure caption for a 3-inch wide illustration, use
.br
.sp
\fBpstext\fP OPT(R)0/3/0/5 OPT(JX)3\fBi\fP OPT(O) OPT(H) OPT(m) OPT(N) << EOF >> figure.ps
.br
This is an optional header record
.br
> 0 -0.5 12 0 4 LT 13p 3i j
.br
@%5%Figure 1.@%%  This illustration shows nothing useful, but it still needs
.br
a figure caption.  Highlighted in @;255/0/0;red@;; you can see the locations
.br
of cities where it is @_impossible@_ to get any good Thai food; these are to
be avoided.
.br
EOF
.br
.SH WINDOWS REMARKS
Note that under Windows, the percent sign (%) is a variable indicator (like $ under Unix).
To indicate a plain percentage sign in a batch script you need to repeat it (%%);
hence the font switching mechanism (@%\fIfont\fP% and @%%) may require twice the
number of percent signs.  This only applies to text inside a script or that otherwise
is processed by DOS.  Data files that are opened and read by \fBpstext\fP do not need such duplication.
.SH BUGS
In paragraph mode, the presence of composite
characters and other escape sequences may lead to unfortunate word splitting. 
.br
The OPT(N) option does not adjust the BoundingBox information so you may
have to post-process the \fIPostScript\fP output with epstool or ps2epsi to obtain
a correct BoundingBox.
.SH "SEE ALSO"
.IR GMT (1),
.IR psbasemap (1),
.IR pslegend (1),
.IR psxy (1)
