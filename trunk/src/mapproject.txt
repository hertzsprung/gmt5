#include "common_options.txt"
.TH MAPPROJECT 1 MANDATE GMT_STRING "Generic Mapping Tools"
#define	LEN1	0.5
#define SCALE1	OPT(Jm)0.5\fBc\fP
.SH NAME
mapproject \- Forward and Inverse map transformation of 2-D coordinates 
.SH SYNOPSIS
\fBmapproject\fP \fIinfiles\fP GMT_J_OPT GMT_Rgeo_OPT 
[ OPT(Ab)|\fBB\fP|\fBf\fP|\fBF\fP[\fIlon0\fP/\fIlat0\fP] ] [ OPT(C)[\fIdx\fP/\fIdy\fP] ] [ OPT(Dc)|\fBi\fP|\fBm\fP|\fBp\fP ] [ OPT(E)[\fIdatum\fP] ] 
[ OPT(F)[\fBk\fP|\fBm\fP|\fBn\fP|\fBi\fP|\fBc\fP|\fBp\fP] ] [ OPT(G)[\fIx0\fP/\fIy0\fP][\fB+\fP|\fB-\fP][/\fIunit\fP] ] [ GMT_H_OPT ] [ OPT(I) ] 
[ OPT(L)\fIline.xy\fP[/\fIunit\fP][\fB+\fP] ] [ OPT(Q)[\fBd\fP|\fBe\fP] [ OPT(S) ] [ OPT(T)[\fBh\fP]\fIfrom\fP[/\fIto\fP] ] 
[ GMT_V_OPT ] [ GMT_t_OPT ] [ GMT_b_OPT ] [ GMT_f_OPT ] [ GMT_g_OPT ] [ GMT_m_OPT ]
.SH DESCRIPTION
\fBmapproject\fP reads (longitude, latitude) positions from \fIinfiles\fP [or standard input] and
computes (x,y) coordinates using the specified map projection and scales.
Optionally, it can read (x,y) positions and compute (longitude, latitude) values
doing the inverse transformation.  This can be used to transform linear (x,y) points
obtained by digitizing a map of known projection to geographical coordinates.  May also
calculate distances along track, to a fixed point, or closest approach to a line.
Finally, can be used to perform various datum conversions.
Additional data fields are permitted after the first 2 columns which must have (longitude,latitude) or (x,y).
See option OPT(:) on how to read (latitude,longitude) files.
.TP
\fIinfiles\fP
Data file(s) to be transformed.  If not given, standard input is read.
#include "explain_-J.txt"
#include "explain_-R.txt"
Special case for the UTM projection: If OPT(C) is used and OPT(R) is not given then the region is set to coincide with
the given UTM zone so as to preserve the full ellipsoidal solution (See RESTRICTIONS for more information).
.SH OPTIONS
No space between the option flag and the associated arguments.
.TP
\fIinfile(s)\fP
input file(s) with 2 or more columns. If no file(s) is given, \fBmapproject\fP will read the standard input.
.TP
OPT(A)[\fBf\fP|\fBb\fP]
OPT(A) calculates the (forward) azimuth from fixed point \fIlon/lat\fP to each data point.  Use OPT(Ab) to get
back-azimuth from data points to fixed point.  Upper case \fBF\fP or \fBB\fP will convert from geodetic to
geocentric latitudes and estimate azimuth of geodesics (assuming the current ellipsoid is not a sphere).
If no fixed point is given then we compute the azimuth (or back-azimuth) from the previous point.
.TP
OPT(C)
Set center of projected coordinates to be at map projection center [Default is lower left corner].
Optionally, add offsets in the projected units to be added (or subtracted when OPT(I) is set) to (from)
the projected coordinates, such as false eastings and northings for particular projection zones [0/0].
The unit used for the offsets is the plot distance unit in effect (see \fBMEASURE_UNIT\fP) unless OPT(F) is used,
in which case the offsets are always in meters.
.TP
OPT(D)
Temporarily override \fBMEASURE_UNIT\fP and use \fBc\fP (cm), \fBi\fP (inch),
\fBm\fP (meter), or \fBp\fP (points) instead.  Cannot be used with OPT(F).
.TP
OPT(E)
Convert from geodetic (lon, lat, height) to Earth Centered Earth Fixed (ECEF) (x,y,z) coordinates (add OPT(I) for the
inverse conversion).  Append
datum ID (see OPT(Qd)) or give \fIellipsoid\fP:\fIdx,dy,dz\fP
where \fIellipsoid\fP may be an ellipsoid ID (see OPT(Qe)) or given as \fIa\fP[,\fIinv_f\fP], where \fIa\fP is the
semi-major axis and \fIinv_f\fP is the inverse flattening (0 if omitted).
If \fIdatum\fP is - or not given we assume WGS-84.
.TP
OPT(F)
Force 1:1 scaling, i.e., output (or input, see OPT(I)) data are in actual projected meters.  To specify other units,
append \fBk\fP (km), \fBm\fP (mile), \fBn\fP (nautical mile), \fBi\fP (inch), \fBc\fP (cm), or \fBp\fP (points).
Without OPT(F), the output (or input, see OPT(I)) are in the units specified by \fBMEASURE_UNIT\fP (but see OPT(D)).
.TP
OPT(G)
Calculate distances along track OR to the optional point set with OPT(G)\fIx0/y0\fP.  Append \IT(unit), the distance unit;
choose among \fBe\fP (m), \fBk\fP (km), \fBm\fP (mile), \fBn\fP (nautical mile), \fBd\fP (spherical degree),
\fBc\fP (Cartesian distance using input coordinates) or \fBC\fP (Cartesian distance using projected coordinates).  The
last unit requires OPT(R) and OPT(J) to be set.  Upper case  \fBE\fP, \fBK\fP, \fBM\fP, \fBN\fP, or \fBD\fP
will use exact methods for geodesic distances (Rudoe's method for distances in length units and employing geocentric\"'
latitudes in degree calculations, assuming the current ellipsoid is not spherical).  With no fixed point we
calculate cumulate distances along track. To obtain incremental distance between successive points, use OPT(G-).
To specify the 2nd point via two extra columns in the input file, choose OPT(G+).
#include "explain_-h.txt"
.TP
OPT(I)
Do the Inverse transformation, i.e. get (longitude,latitude) from (x,y) data.
.TP
OPT(L)
Determine the shortest distance from the input data points to the line(s) given in the ASCII multi-segment file \fIline.xy\fP.
The distance and the coordinates of the nearest point will be appended to the output as three new columns.
Append the distance unit; choose among \fBe\fP (m), \fBk\fP (km), \fBm\fP (mile), \fBn\fP (nautical mile), \fBd\fP (spherical degree),
\fBc\fP (Cartesian distance using input coordinates) or \fBC\fP (Cartesian distance using projected coordinates).  The
last unit requires OPT(R) and OPT(J) to be set.  A spherical approximation is used for geographic data.
Finally, append \fB+\fP to report the line segment id and the fractional point number instead of lon/lat of the nearest point.
.TP
OPT(Q)
List all projection parameters.  To only list datums, use OPT(Qd).  To only list ellipsoids, use OPT(Qe).
.TP
OPT(S)
Suppress points that fall outside the region.
.TP
OPT(T)
Coordinate conversions between datums \fIfrom\fP and \fIto\fP using the standard Molodensky transformation.  Use OPT(Th) if 3rd input column has
height above ellipsoid [Default assumes height = 0, i.e., on the ellipsoid].  Specify datums using the
datum ID (see OPT(Qd)) or give \fIellipsoid\fP:\fIdx,dy,dz\fP
where \fIellipsoid\fP may be an ellipsoid ID (see OPT(Qe)) or given as \fIa\fP[,\fIinv_f\fP], where \fIa\fP is the
semi-major axis and \fIinv_f\fP is the inverse flattening (0 if omitted).
If \fIdatum\fP is - or not given we assume WGS-84.
OPT(T) may be used in conjunction with OPT(R) OPT(J) to change the datum before coordinate projection
(add OPT(I) to apply the datum conversion after the inverse projection).  Make sure that the
\fBELLIPSOID\fP setting is correct for your case.
#include "explain_-V.txt"
#include "explain_-t.txt"
#include "explain_-bi.txt"
[Default is 2 input columns].
#include "explain_-bo.txt"
[Default is same as input].
#include "explain_-f.txt"
#include "explain_-g.txt"
#include "explain_-m.txt"
#include "explain_precision.txt"
.SH EXAMPLES
To transform a file with (longitude,latitude) into (x,y) positions in cm on
a Mercator grid for a given scale of LEN1 cm per degree, run
.br
.sp
\fBmapproject\fP lonlatfile OPT(R)20/50/12/25 SCALE1 > xyfile
.br
.sp
To transform several 2-column, binary, double precision files with (latitude,longitude) into (x,y) positions in inch on
a Transverse Mercator grid (central longitude 75W) for scale = 1:500000 and suppress those points
that would fall outside the map area, run
.br
.sp
\fBmapproject\fP tracks.* OPT(R)-80/-70/20/40 OPT(Jt)-75/1:500000 OPT(:) OPT(S) OPT(Di) OPT(bo) OPT(bi)2 > tmfile.b
.br
.sp
To convert the geodetic coordinates (lon, lat, height) in the file old.dat from the NAD27 CONUS datum
(Datum ID 131 which uses the Clarke-1866 ellipsoid) to WGS 84, run
.br
.sp
\fBmapproject\fP old.dat OPT(Th)131 > new.dat
.br
.sp
To compute the closest distance (in km) between each point in the input file quakes.dat and the
line segments given in the multi-segment ASCII file coastline.xy, run
.br
.sp
\fBmapproject\fP quakes.dat OPT(L)coastline.xy/k > quake_dist.dat
.SH RESTRICTIONS
The rectangular input region set with OPT(R) will in general be mapped into a
non-rectangular grid.  Unless OPT(C) is set, the leftmost point on this grid has xvalue = 0.0, and the
lowermost point will have yvalue = 0.0. Thus, before you digitize a map, run the
extreme map coordinates through \fBmapproject\fP using the appropriate scale and see
what  (x,y) values they are mapped onto.  Use these values when setting up for
digitizing in order to have the inverse transformation work correctly, or alternatively,
use \fBawk\fP to scale and shift the (x,y) values before transforming.
.br
For some projection, a spherical solution may be used despite the user having
selected an ellipsoid.  This occurs when the users OPT(R) setting implies a
region that exceeds the domain in which the ellipsoidal series expansions are
valid.  These are the conditions: (1) Lambert Conformal Conic (OPT(JL))and Albers
Equal-Area (OPT(JB)) will use the spherical solution when the map scale exceeds
1.0E7.  (2) Transverse Mercator (OPT(JT)) and UTM (OPT(JU)) will will use the
spherical solution when either the west or east boundary given in OPT(R) is
more than 10 degrees from the central meridian, and (3) same for Cassini (OPT(JC))
but with a limit of only 4 degrees.
.SH ELLIPSOIDS AND SPHEROIDS
\fBGMT\fP will use ellipsoidal formulae if they are implemented and the user have
selected an ellipsoid as the reference shape (see \fBELLIPSOID\fP in \fBgmtdefaults\fP).  The user
needs to be aware of a few potential pitfalls: (1)  For some projections,
such as Transverse Mercator, Albers, and Lamberts conformal conic we use the
ellipsoidal expressions when the areas mapped are small, and switch to the
spherical expressions (and substituting the appropriate auxiliary latitudes)
for larger maps.  The ellipsoidal formulae are used as follows: (a) Transverse
Mercator: When all points are within 10 degrees of central meridian, (b) Conic
projections when longitudinal range is less than 90 degrees, (c) Cassini
projection when all points are within 4 degrees of central meridian. (2) When
you are trying to match some historical data (e.g., coordinates obtained with
a certain projection and a certain reference ellipsoid) you may find that \fBGMT\fP
gives results that are slightly different.  One likely source of this mismatch
is that older calculations often used less significant digits.  For instance,
Snyder's examples often use the Clarke 1866 ellipsoid (defined by him as\"'
having a flattening f = 1/294.98).  From f we get the eccentricity squared to
be 0.00676862818 (this is what \fBGMT\fP uses), while Snyder rounds off and uses
0.00676866.  This difference can give discrepancies of several tens of cm.
If you need to reproduce coordinates projected with this slightly different
eccentricity, you should specify your own ellipsoid with the same parameters
as Clarke 1866, but with f = 1/294.97861076.  Also, be aware that older data
may be referenced to different datums, and unless you know which datum was
used and convert all data to a common datum you may experience mismatches of
tens to hundreds of meters. (3) Finally, be aware that \fBMAP_SCALE_FACTOR\fP
have certain default values for some projections so you may have to override
the setting in order to match results produced with other settings.
.SH "SEE ALSO"
.IR gmtdefaults (1),
.IR GMT (1),
.IR project (1)
.SH REFERENCES
Bomford, G., 1952, Geodesy, Oxford U. Press.
.br
Snyder, J. P., 1987, Map Projections \- A Working Manual, U.S. Geological Survey Prof. Paper 1395.
.br
Vanicek, P. and Krakiwsky, E, 1982, Geodesy \- The Concepts, North-Holland Publ., ISBN: 0 444 86149 1.
.br
