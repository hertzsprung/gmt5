#include "common_options.txt"
.TH SURFACE 1 MANDATE GMT_STRING "Generic Mapping Tools"
.SH NAME
surface \- adjustable tension continuous curvature surface gridding algorithm
.SH SYNOPSIS
BD(surface) [ IT(datatables) ] OPT(G)IT(outputfile.nc) GMT_I_OPT GMT_Rgeo_OPT [ OPT(A)IT(aspect_ratio) ] 
[ OPT(C)IT(convergence_limit) ] [ OPT(Ll)IT(lower) ] [ OPT(Lu)IT(upper) ] [ OPT(N)IT(max_iterations) ] [ OPT(Q) ] 
[ OPT(S)IT(search_radius)[BD(m)|BD(s)] ] [ OPT(T)IT(tension_factor)[BD(i)|BD(b)] ] [ GMT_V_OPT ] 
[ OPT(Z)IT(over-relaxation_factor) ] [ GMT_bi_OPT ] [ GMT_fi_OPT ] [ GMT_h_OPT ] [ GMT_i_OPT ] [ GMT_colon_OPT ]
.SH DESCRIPTION
BD(surface) reads randomly-spaced (x,y,z) triples from standard input [or IT(datatables)] and produces
a binary grid file of gridded values z(x,y) by solving:
.sp
	(1 - T) * L (L (z)) + T * L (z) = 0
.sp
where T is a tension factor between 0 and 1, and L indicates the Laplacian operator.
T = 0 gives the "minimum curvature" solution which is equivalent to SuperMISP and the ISM
packages.  Minimum curvature can cause undesired oscillations and false local maxima or minima
(See Smith and Wessel, 1990), and you may wish to use T > 0 to suppress these effects.
Experience suggests T ~ 0.25 usually looks good for potential field data and T should be larger
(T ~ 0.35) for steep topography data.  T = 1 gives a harmonic surface (no maxima or minima are
possible except at control data points).  It is recommended that the user pre-process the data with
BD(blockmean), BD(blockmedian), or BD(blockmode) to avoid spatial aliasing and eliminate redundant data.
You may impose lower and/or upper bounds on the solution.  These may be entered in the form of
a fixed value, a grid with values, or simply be the minimum/maximum input data values.
#include "explain_commonitems.txt"
.SH REQUIRED ARGUMENTS
.TP
OPT(G)IT(outputfile.nc)
Output file name.  Output is a binary 2-D IT(.nc) file.  Note that the smallest grid dimension must be at least 4.
#include "explain_-I.txt"
#include "explain_-R.txt"
.SH OPTIONAL ARGUMENTS
#include "explain_intables.txt"
.TP
OPT(A)IT(aspect_ratio)
Aspect ratio.  If desired, grid anisotropy can be added to the equations.  Enter IT(aspect_ratio),
where dy = dx / IT(aspect_ratio) relates the grid dimensions.  [Default = 1 assumes isotropic grid.]
.TP
OPT(C)IT(convergence_limit)
Convergence limit.  Iteration is assumed to have converged when the maximum absolute change in 
any grid value is less than IT(convergence_limit).  (Units same as data z units).  [Default is scaled
to 0.1 percent of typical gradient in input data.]
.TP
OPT(Ll)IT(lower) and OPT(Lu)IT(upper)
Impose limits on the output solution.  BD(l)IT(lower) sets the lower bound.  IT(lower) can be the name of a
grid file with lower bound values, a fixed value, BD(d) to set to minimum input value, or BD(u) for unconstrained [Default].
BD(u)IT(upper) sets the upper bound and can be the name of a
grid file with upper bound values, a fixed value, BD(d) to set to maximum input value, or BD(u) for unconstrained [Default].
.TP
OPT(N)IT(max_iterations)
Number of iterations.  Iteration will cease when IT(convergence_limit) is reached or when number of
iterations reaches IT(max_iterations). [Default is 250.]
.TP
OPT(Q)
Suggest grid dimensions which have a highly composite greatest
common factor. This allows surface to use several intermediate steps in the
solution, yielding faster run times and better results. The sizes suggested by
OPT(Q) can be achieved by altering OPT(R) and/or OPT(I). You can
recover the OPT(R) and OPT(I) you want later by using BD(grdsample) or BD(grdcut) on the output of BD(surface).
.TP
OPT(S)IT(search_radius)[BD(m)|BD(s)]
Search radius.  Enter IT(search_radius) in same units as x,y data; append BD(m) to indicate arc minutes
or BD(s) for arc seconds.
This is used to initialize the grid before the first iteration; it is not worth the time unless the
grid lattice is prime and cannot have regional stages.  [Default = 0.0 and no search is made.]
.TP
OPT(T)IT(tension_factor)[BD(i)|BD(b)]
Tension factor[s].  These must be between 0 and 1.  Tension may be used in the interior solution
(above equation, where it suppresses spurious oscillations) and in the boundary conditions (where
it tends to flatten the solution approaching the edges).  Using zero for both values results in
a minimum curvature surface with free edges, i.e. a natural bicubic spline.
Use OPT(T)IT(tension_factor)BD(i) to set interior tension, and OPT(T)IT(tension_factor)BD(b)
to set boundary tension.  If you do not append BD(i) or BD(b), both will be set to the same value.
[Default = 0 for both gives minimum curvature solution.]
#include "explain_-V.txt"
OPT(V3) will report the convergence after each iteration;  OPT(V) will report only after 
each regional grid is converged.
.TP
OPT(Z)IT(over-relaxation_factor)
Over-relaxation factor.  This parameter is used to accelerate the convergence; it is a number between
1 and 2.  A value of 1 iterates the equations exactly, and will always assure stable convergence.  Larger
values overestimate the incremental changes during convergence, and will reach a solution more rapidly but may
become unstable.  If you use a large value for this factor, it is a good idea to monitor each iteration
with the OPT(Vl) option.  [Default = 1.4 converges quickly and is almost always stable.]
#include "explain_-bi.txt"
[Default is 3 input columns].
#include "explain_-f.txt"
#include "explain_-h.txt"
Not used with binary data.
#include "explain_-icols.txt"
#include "explain_colon.txt"
#include "explain_help.txt"
#include "explain_float.txt"
.SH EXAMPLES
.sp
To grid 5 by 5 minute gravity block means from the ASCII data in hawaii_5x5.xyg, using a IT(tension_factor) = 0.25,
a IT(convergence_limit) = 0.1 milligal, writing the result to a file called hawaii_grd.nc, 
and monitoring each iteration, try:
.sp
surface hawaii_5x5.xyg -R198/208/18/25 -I5m -Ghawaii_grd.nc -T0.25 -C0.1 -Vl
.SH BUGS
BD(surface) will complain when more than one data point is found for
any node and suggest that you run BD(blockmean), BD(blockmedian), or BD(blockmode) first.  If you
did run BD(blockm*) and still get this message it usually means that your
grid spacing is so small that you need more decimals in the output format used by
BD(blockm*).  You may specify more decimal places by editing the
parameter BD(FORMAT_FLOAT_OUT) in your BD(gmt.conf) file prior to running BD(blockm*),
or choose binary input and/or output using single or double precision storage.
.br
Note that only gridline registration is possible with BD(surface).  If you need a pixel-registered
grid you can resample a gridline registered grid using BD(grdsample) OPT(T).
.SH "SEE ALSO"
.IR blockmean (1),
.IR blockmedian (1),
.IR blockmode (1),
.IR gmt (1),
.IR nearneighbor (1),
.IR triangulate (1)
.SH REFERENCES
Smith, W. H. F, and P. Wessel, 1990, Gridding with continuous curvature splines in tension, IT(Geophysics),
55, 293\-305.
