.TH GRDSPLINE 1 DATE VERSION VERSION
#include "common_options.txt"
.SH NAME
grdspline \- Interpolate 2-D Cartesian or spherical surface data using Green function splines.
.SH SYNOPSIS
\fBgrdspline\fP [ \fIxyzfile(s)\fP ] 
[ OPT(A)[\fB1\fP|\fB2\fP|\fB3\fP,]\fIgradfile\fP ] [ OPT(C)\fIcut\fP[/\fIfile\fP] ] 
[ OPT(D)\fImode\fP ] [ OPT(F) ] [ OPT(G)\fIgrdfile\fP] [ GMT_H_OPT ] [ GMT_I_OPT ] [ OPT(L) ] 
[ OPT(N)\fImaskgrid\fP ] [ OPT(Q)\fIaz\fP ] [ GMT_Rgeo_OPT ] [ OPT(S)\fBc|t|g|p|q\fP[\fIpars\fP] ] 
[ OPT(T)\fInodefile\fP ] [ GMT_V_OPT ] [ GMT_t_OPT ] [ GMT_bi_OPT ] [ GMT_bo_OPT ]
.SH DESCRIPTION
\fBgrdspline\fP uses the Green function G(\fBx\fP; \fBx'\fP) for the chosen spline to interpolate data
at regular [or arbitrary] output locations.  Mathematically, the solution is
z(\fBx\fP) = sum {\fIc\fP(\fIi\fP) G(\fBx\fP; \fBx\fP(\fIi\fP))}, for \fIi\fP = 1, \fIn\fP, the number
of data points \fBx\fP(\fIi\fP), \fIz\fP(\fIi\fP).  Once the \fIn\fP coefficients \fIc\fP(\fIi\fP)
have been found then the sum can be evaluated at any output point \fBx\fP.
Choose between minimum curvature and regularized or continuous curvature splines in tension for
either 2-D Cartesian or spherical surface coordinates. After first removing a planar trend
(Cartesian geometries) or mean value (spherical surface) and normalizing these residuals,
the least-squares matrix solution for the spline coefficients \fIc\fP(\fIi\fP) is found by
solving the \fIn\fP by \fIn\fP linear system \fIz\fP(\fIj\fP) = sum {\fIc\fP(\fIi\fP) G(\fBx\fP(\fIj\fP); \fBx\fP(\fIi\fP))},
for \fIj\fP = 1, \fIn\fP; this
solution yields an exact interpolation of the supplied data points.  Alternatively, you may
choose to perform a singular value decomposition (SVD) and eliminate the contribution from the
smallest eigenvalues; this approach yields an approximate solution.  Trends and scales are
restored when evaluating the output.
.SH OPTIONS
.TP
\fIxyzfile(s)\fP
The name of one or more ASCII [or binary, see OPT(bi)] files holding the (\fIx, y, z\fP)
data points.  If no file is given then we read standard input instead.
.TP
.B \-A
The solution will partly be constrainted by surface gradients.  Specify one of three input formats:
\fB1\fP: The records contain \fIx, y, azimuth, gradient\fP (\fIazimuth\fP in degrees is measured
clockwise from the vertical (north) [Default]).
\fB2\fP: The records contain \fIx, y, direction, gradient\fP (\fIdirection\fP in degrees is measured
counter-clockwise from the horizontal. \fB3\fP: The records contain \fIx, y, x-component, y-component\fP.
Append name of ASCII file with the surface gradients (following a comma if a format is specified).  
.TP
.B \-C
Find an approximate surface fit: Solve the linear system for the spline coefficients by SVD and eliminate the contribution
from all eigenvalues whose ratio to the largest
eigenvalue is less than \fIcut\fP [Default uses Gauss-Jordan elimination to solve the
linear system and fit the data exactly].  Optionally, append /\fIfile\fP to
save the eigenvalue ratios to the specified file for further analysis.
Finally, if a negative \fIcut\fP is given then /\fIfile\fP is required and execution
will stop after saving the eigenvalues, i.e., no surface output is produced.
.TP
.B \-D
Sets the distance flag that determines how we calculate distances between (\fIx,y\fP) points.  
Select \fImode\fP 0-2 for Cartesian 2-D surface spline interpolation:
OPT(D)0 means (\fIx,y\fP) in user units, Cartesian distances,
OPT(D)1 for (\fIx,y\fP) in degrees, flat Earth distances, and
OPT(D)2 for (\fIx,y\fP) in degrees, spherical distances in km.  Then, the setting of \fBELLIPSOID\fP determines if we
compute great circle arcs or geodesics.
Option \fImode\fP = 3 applies to spherical surface spline interpolation only:
OPT(D)3 for (\fIx,y\fP) in degrees, use cosine of great circle (or geodesic) arcs.
.TP
.B \-F
Force pixel registration.  [Default is gridline registration].
.TP
.B \-G
Name of resulting output file.  If (1) options OPT(R), OPT(I), and possibly OPT(F) are set or
(2) option OPT(N) is selected then OPT(G) is required and the output file is a 2-D binary gridded file.
However, if OPT(T) is selected then the output is an ASCII (or binary; see OPT(bo)) table;
if OPT(G) is not given then this table is written to standard output.  Ignored if OPT(C) or OPT(C)0
is given.
#include "explain_-H.txt"
#include "explain_-I.txt"
.TP
.B \-L
Do \fInot\fP remove a planer \fIx-y\fP trend when \fB\-D\fP selects mode 0 or 1 [For those Cartesian cases a least-squares
plane is modeled and removed, then restored after fitting a spline to the residuals].  However, in mixed
cases with both data values and gradients, or for spherical surface data, only the mean data value is removed
(and later and restored).
.TP
.B \-N
Only evaluate the solution at the nodes in the \fImaskgrid\fP that are not equal to NaN. This option eliminates the need to
specify options OPT(R), OPT(I), and OPT(F).
.TP
.B \-Q
Rather than evaluate the surface, take the directional derivative in the \fIaz\fP azimuth and return the magnitude of this
derivative instead.
#include "explain_-R.txt"
.TP
.B \-S
Select one of five different splines.  The first three are 2-D Cartesian splines:
(\fBc\fP) Minimum curvature spline [\fISandwell\fP, 1984],
(\fBt\fP) Continuous curvature spline in tension [\fIWessel and Bercovici\fP, 1998]; append
\fItension\fP[/\fIscale\fP] with \fItension\fP in the 0\-1 range and optionally supply a length scale [Default is the average grid spacing],
(\fBg\fP) Regularized spline in tension [\fIMitasova and Mitas\fP, 1993]; append \fIscale\fP factor (> 0).
The last two are spherical surface splines and both imply \fB\-D\fP3 \fB\-fg\fP:
(\fBp\fP) Minimum curvature spline [\fIParker\fP, 1994],
(\fBq\fP) Continuous curvature spline in tension [\fIWessel and Becker\fP, 2008]; append \fItension\fP (> 0).
The G(\fBx\fP; \fBx'\fP) for the last method is slower to compute; by specifying \fB\-SQ\fP you can speed up calculations
by first pre-calculating G(\fBx\fP; \fBx'\fP) for a dense set of \fBx\fP values (e.g., 100,001 nodes between -1 to +1)
and store them in look-up tables.  Optionally append /\fIN\fP (an odd integer) to specify how many points in the spline to set [100001]
.TP
.B \-T
ASCII file with desired (\fIx, y\fP) output locations in first two columns.  The resulting
(\fIz\fP) values are appended to each record and written to the file given in OPT(G) [or stdout if not specified];
see OPT(bo) for binary output instead.  This option eliminates the need to
specify options OPT(R), OPT(I), and OPT(F).
#include "explain_-V.txt"
#include "explain_-bi.txt"
[Default is 3 input columns (\fIx,y,z\fP)].
#include "explain_-bo.txt"
.SH EXAMPLES
To make a uniform grid using the minimum curvature spline for the same Cartesian data set used in the GMT Cookbook example 16, try
.sp
\fBgrdspline\fP table_5.11 \fB\-R\fP0/6.5/-0.2/6.5 \fB\-I\fP0.1 \fB\-Sc \-V\fP \fB\-G\fPS1987.grd
.br
.sp
To use Cartesian splines in tension but only evaluate the solution where the input mask grid is not NaN, try
.sp
\fBgrdspline\fP table_5.11 \fB\-N\fPmask.grd \fB\-St\fP0.5 \fB\-V\fP \fB\-G\fPWB1998.grd
.sp
To recreate Parker's [1994] example on a global 1x1 degree grid, assuming the data are in file mag_obs_1990.d, try
.sp
grdspline \fB\-V \-Rg \-fg \-Sp \-D\fP3 \fB\-I\fP1 \fB\-G\fPP1994.grd mag_obs_1990.d
.sp
To do the same problem but applying tension and use precalculated Green functions, use
.sp
grdspline \fB\-V \-Rg \-fg \-SQ\fP2.5 \fB\-D\fP3 \fB\-I\fP1 \fB\-G\fPWB2008.grd mag_obs_1990.d
.SH CONSIDERATIONS
For the Cartesian cases we use the free-space Green functions, hence no boundary conditions are
applied at the edges of the specified domain.  For most applications this is fine as the region typically
is arbitrarily set to reflect the extent of your data.  However, if you require
particular boundary conditions then you may consider using \fBsurface\fP instead.
.br
In all cases, the solution is obtained by inverting a \fIn\fP x \fIn\fP double precision matrix for the Green
function coefficients, where \fIn\fP
is the number of data constraints.  Hence, your computer's memory may place restrictions on how large data
sets you can process with \fBgrdspline\fP.  Pre-processing your data with \fBblockmean\fP, \fBblockmedian\fP,
or \fBblockmode\fP is recommended to avoid aliasing and may also control the size of \fIn\fP. For information,
if \fIn\fP = 1024 then only 8 Mb memory is needed, but for \fIn\fP = 10240 we need 800 Mb. Note that
\fBgrdspline\fP is fully 64-bit compliant if compiled as such.
.SH TENSION
Tension is generally used to suppress spurious oscillations caused by the minimum curvature requirement, in particular
when rapid gradient changes are present in the data.  The proper amount of tension can only be determined by experimentation.
Generally, very smooth data (such as potential fields) do not require much, if any tension, while rougher data (such
as topography) will typically interpolate better with moderate tension.  Make sure you try a range of values before
choosing your final result.  For more information on tension see the references below.
.SH "REFERENCES"
Mitasova, H., and L. Mitas, 1993, Interpolation by regularized spline with tension: I. Theory and implementation, \fIMath. Geol., 25\fP, 641\-655.
.br
Parker, R. L., 1994, \fIGeophysical Inverse Theory\fP, 386 pp., Princeton Univ. Press, Princeton, N.J.
.br
Sandwell, D. T., 1987, Biharmonic spline interpolation of Geos-3 and Seasat altimeter data, \fIGeophys. Res. Lett., 14\fP, 139\-142.
.br
Wessel, P., and D. Bercovici, 1998, Interpolation with splines in tension: a Green's function approach, \fIMath. Geol., 30\fP, 77\-93.
.br
Wessel, P., and J. M. Becker, 2008, Continuous curvature spherical spline in tension, \fIGeophys. Res. Lett, yy\fP, xx\-xx.
.br
Wessel, P., 2008, A general-purpose Green function interpolator, \fIComputers & Geosciences, yy\fP, xx\-xx.
.SH "SEE ALSO"
.IR GMT (1),
.IR nearneighbor (1),
.IR surface (1),
.IR triangulate (1),
.IR xyz2grd (1),
