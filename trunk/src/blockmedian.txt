#include "common_options.txt"
.TH BLOCKMEDIAN 1 MANDATE GMT_STRING "Generic Mapping Tools"
.SH NAME
blockmedian \- filter to block average (IT(x),IT(y),IT(z)) data by L1 norm.
.SH SYNOPSIS
BD(blockmedian) [ IT(xyz[w]file(s)) ] GMT_I_OPT GMT_Rx_OPT 
[ OPT(C) ] [ OPT(E)[BD(b)] ] [ OPT(Q) ] [ OPT(T)IT(quantile) ] 
[ GMT_V_OPT ] [ OPT(W)[BD(i)|BD(o)] ] [ GMT_b_OPT ] [ GMT_f_OPT ] [ GMT_h_OPT ] 
[ GMT_i_OPT ] [ GMT_o_OPT ] [ GMT_r_OPT ] [ GMT_colon_OPT ]
.SH DESCRIPTION
BD(blockmedian) reads arbitrarily located (IT(x),IT(y),IT(z)) triples [or optionally weighted
quadruples (IT(x),IT(y),IT(z),IT(w))] from standard input [or IT(xyz[w]file(s))] and writes to
standard output a median position and value for every non-empty block in a grid region
defined by the OPT(R) and OPT(I) arguments.  Either BD(blockmean), BD(blockmedian),
or BD(blockmode) should be used as a pre-processor before running BD(surface) to
avoid aliasing short wavelengths.  These routines are also generally useful for
decimating or averaging (IT(x),IT(y),IT(z)) data.  You can modify the precision of the output
format by editing the BD(FORMAT_FLOAT_OUT) parameter in your BD(gmt.conf) file, or
you may choose binary input and/or output using single or double precision storage.
.SH REQUIRED ARGUMENTS
.TP
IT(xyz[w]file(s))
3 [or 4] column ASCII file(s) [or binary, see OPT(b)] holding (IT(x),IT(y),IT(z)[,IT(w)])
data values.  [IT(w)] is an optional weight for the data.  If no file is specified,
BD(blockmedian) will read from standard input.
#include "explain_-I.txt"
#include "explain_-R.txt"
.SH OPTIONAL ARGUMENTS
.TP
OPT(C)
Use the center of the block as the output location [Default uses the median x and
median y as location (but see OPT(Q))]..
.TP
OPT(E)[BD(b)]
Provide Extended report which includes BD(s) (the L1 scale of the median),
BD(l), the lowest value, and BD(h), the high value for each block. Output order
becomes IT(x),IT(y),IT(z),IT(s),IT(l),IT(h)[,IT(w)]. [Default outputs IT(x),IT(y),IT(z)[,IT(w)].
For box-and-whisker calculation, use OPT(Eb) which will output IT(x),IT(y),IT(z),IT(l),IT(q25),IT(q75),IT(h)[,IT(w)],
where IT(q25) and IT(q75) are the 25% and 75% quantiles, respectively.
See OPT(W) for IT(w) output.
.TP
OPT(Q)
(Quicker) Finds median IT(z) and (IT(x),IT(y)) at that the median IT(z) [Default finds median
IT(x), median IT(y) independent of IT(z)].  Also see OPT(C).
.TP
OPT(T)IT(quantile)
Sets the IT(quantile) of the distribution to be returned [Default is 0.5 which returns the
median IT(z)].  Here, 0 < IT(quantile) < 1.
#include "explain_-V.txt"
.TP
OPT(W)[BD(i)|BD(o)]
Weighted modifier[s].  Unweighted input and output has 3 columns IT(x),IT(y),IT(z); Weighted
i/o has 4 columns IT(x),IT(y),IT(z),IT(w).  Weights can be used in input to construct weighted
mean values in blocks.  Weight sums can be reported in output for later combining several
runs, etc.  Use OPT(W) for weighted i/o, OPT(Wi) for weighted input only, OPT(Wo) for
weighted output only.  [Default uses unweighted i/o].
#include "explain_-bi.txt"
[Default is 3 (or 4 if OPT(Wi) is set)].
#include "explain_-bo.txt"
[Default is 3 (or 4 if OPT(Wo) is set)]. OPT(E) adds 3 additional columns.
#include "explain_-f.txt"
#include "explain_-h.txt"
#include "explain_-icols.txt"
#include "explain_-ocols.txt"
#include "explain_nodereg.txt"
Each block is the
locus of points nearest the grid value location.  For example, with OPT(R)10/15/10/15
and and OPT(I)1:  with the OPT(r) option 10 <= (IT(x),IT(y)) < 11 is one of 25 blocks;
without it 9.5 <= (IT(x),IT(y)) < 10.5 is one of 36 blocks.
#include "explain_colon.txt"
#include "explain_help.txt"
#include "explain_precision.txt"
.SH EXAMPLES
To find 5 by 5 minute block medians from the double precision binary data in hawaii_b.xyg
and output an ASCII table, run
.sp
BD(blockmedian) hawaii_b.xyg OPT(R)198/208/18/25 OPT(I)5BD(m) OPT(bi)3 > hawaii_5x5.xyg
.br
.sp
To compute the shape of a data distribution per bin via a box-and-whisker diagram we need the 0%, 25%,
50%, 75%, and 100% quantiles.  To do so on a global 5 by 5 degree basis from the ASCII table depths.xyz
and send output to an ASCII table, run
.sp
BD(blockmedian) depths.xyz OPT(Rg) OPT(I)5 OPT(Eb) OPT(r) > depths_5x5.txt
.SH "SEE ALSO"
.IR blockmean (1),
.IR blockmode (1),
.IR gmt (1),
.IR gmt.conf (5),
.IR nearneighbor (1),
.IR surface (1),
.IR triangulate (1)
