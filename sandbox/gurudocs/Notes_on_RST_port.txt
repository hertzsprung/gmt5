Notes on the docs conversion from nroff to reStructuredText (RST)

Baseline step was performed by converting the html version, which was previously
created by  'rman', to RST with the help of 'pandoc'.

Although these RST files were already usable the problem is that we lost the capacity
of using 'includes' defining the common options and that were wildly used in the
original .txt files.

- Since RST also allows using includes the includes chunks were extracted from the
  first generation RST files and converted in RST includes.
- Next we had to replace from all first generation RST files the expanded content of
  the includes by the includes themselves. This was accomplished with help of scripts
  and lots of sweat. Being mostly a manual task it is expect that many mistakes will
  need to be fixed along time.
- One further problem with the 'includes' method is that there are lots of exceptions
  in the original includes where some extra text was added at the end of the #include
  directive in the .txt file. This shown to be a problem because the same methodology
  does not work with the RST format. An example

    #include "explain_-bo.txt"
    [Default is same as input].

  So we had to find a trick to workaround this limitation and the trick was to use
  the 'Replacement' macro in RST where the above example looks like

  .. |Add_-bo| replace:: Select binary output.
  .. include:: explain_-bo.rst_

  and the explain_-bo.rst_ file reads (the macro name is the part inside the ||)

  **-bo**\ [*ncols*\ ][*type*\ ] (\*)
      Select binary output. |Add_-bo|

- However, unfortunately the story doesn't end here as once defined the macros cannot
  be empty (nor redefined) so we had to cheat the system again by having it write an
  invisible character in cases were we want to use the 'include' without any extra text.
  It than reads like

  .. |Add_-bo| unicode:: 0x20 .. just an invisible code
  .. include:: explain_-bo.rst_

- One further note about the 'includes' extension. We used *.rst_ as we could have
  used any other, except .rst itself because that is used by the documentation and
  the sphinx parser would complain a lot with messages of non-included files in the
  TOC structure.


List of currently includes that use Replacement macros and have to be used as explained above.

.. |Add_-A| replace:: 
.. |Add_-A| unicode:: 0x20 .. just an invisible code
.. |Add_-R| replace:: 
.. |Add_-R| unicode:: 0x20 .. just an invisible code
.. |Add_-Rgeo| replace:: 
.. |Add_-Rgeo| unicode:: 0x20 .. just an invisible code
.. |Add_-Rz| replace:: 
.. |Add_-Rz| unicode:: 0x20 .. just an invisible code
.. |Add_-V| replace:: 
.. |Add_-V| unicode:: 0x20 .. just an invisible code

.. |Add_-f| unicode:: 0x20 .. just an invisible code
.. |Add_-f| replace:: 
.. |Add_-g| unicode:: 0x20 .. just an invisible code
.. |Add_-g| replace:: 

.. |Add_-h| unicode:: 0x20 .. just an invisible code
.. |Add_-h| replace:: 
.. |Add_-bo| replace:: 
.. |Add_-bo| unicode:: 0x20 .. just an invisible code
.. |Add_-bi| replace:: 
.. |Add_-bi| unicode:: 0x20 .. just an invisible code

.. |Add_nodereg| replace:: 
.. |Add_nodereg| unicode:: 0x20 .. just an invisible code
.. |Add_perspective| replace:: 
.. |Add_perspective| unicode:: 0x20 .. just an invisible code
.. |Add_intables| replace:: 
.. |Add_intables| unicode:: 0x20 .. just an invisible code
