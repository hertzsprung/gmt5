#include "common_options.txt"
.TH GMTVECTOR 1 MANDATE GMT_STRING "Generic Mapping Tools"
.SH NAME
gmtvector \- Basic manipulation of Cartesian vectors
.SH SYNOPSIS
BD(gmtvector) [ IT(table) ] [ OPT(A)BD(m)[IT(conf)]|IT(vector) ] [ OPT(C)[BD(i)|BD(o)] ] [ OPT(E) ] [ OPT(N) ] 
[ OPT(S)IT(vector) ] [ OPT(T)BD(a)|BD(d)|BD(D)|BD(p)IT(az)|BD(r)[IT(arg)|BD(s)|BD(x)] ] [ GMT_V_OPT ] 
[ GMT_bi_OPT ] [ GMT_f_OPT ] [ GMT_g_OPT ] [ GMT_h_OPT ] [ GMT_i_OPT ] [ GMT_o_OPT ] [ GMT_colon_OPT ] 
.SH DESCRIPTION
BD(gmtvector) reads either (x, y), (x, y, z), (r, theta) or (lon, lat) [or (lat,lon); see OPT(:)] coordinates
from the first 2-3 columns on standard input [or IT(infiles)].  If OPT(fg) is selected and only two items are
read (i.e., lon, lat) then these coordinates are converted to Cartesian three-vectors on the unit sphere.
Otherwise we expect (r, theta) unless OPT(Ci) is in effect.  If no file is found we expect a single vector
to be given as argument to OPT(A); this argument will also be interpreted as an x/y[/z], lon/lat, or r/theta vector.
The input vectors (or the one provided via OPT(A)) are denoted the prime vector(s).
Several standard vector operations (angle between vectors, cross products, vector sums, and vector rotations) can be selected;
most require a single second vector, provided via OPT(S).  The output vectors will be converted back to (lon, lat) or
(r, theta) unless OPT(Co) is set which requests (x, y[, z]) Cartesian coordinates.
#include "explain_commonitems.txt"
.SH REQUIRED ARGUMENTS
None.
.SH OPTIONAL ARGUMENTS
.TP
IT(table)
One or more ASCII [or binary, see GMT_bi_OPT] file containing lon,lat [lat,lon if OPT(:)] values in the first 2 columns
(if OPT(fg) is given) or (r, theta), or perhaps (x, y[, z]) if OPT(Ci) is given).  If no file is specified, BD(gmtvector), will read from standard input.
.TP
OPT(A)BD(m)[IT(conf)]|IT(vector)
Specify a single, primary vector instead of reading IT(infiles); see IT(infiles) for possible vector formats.
Alternatively, append BD(m) to read IT(infiles) and set the single, primary vector to be the mean resultant vector first.
We also compute the confidence ellipse for the mean vector (azimuth of major axis, major axis, and minor axis; for geographic
data the axes will be reported in km).  You may optionally append the confidence level in percent [95].  These three parameters
are reported in the final three output columns.
.TP
OPT(C)[BD(i)|BD(o)]
Select Cartesian coordinates on input and output.  Append BD(i) for input only or BD(o) for output only; otherwise both input and output
will be assumed to be Cartesian [Default is polar r/theta for 2-D data and geographic lon/lat for 3-D].
.TP
OPT(E)
Convert input geographic coordinates from geodetic to geocentric and output geographic coordinates from
geocentric to geodetic.  Ignored unless OPT(fg) is in effect, and is bypassed if OPT(C) is selected.
.TP
OPT(N)
Normalize the resultant vectors prior to reporting the output [No normalization].  This only has an effect
if OPT(Co) is selected.
.TP
OPT(S)[IT(vector)]
Specify a single, secondary vector in the same format as the first vector.  Required by operations in OPT(T) that
need two vectors (average, bisector, dot product, cross product, and sum).
.TP
OPT(T)BD(a)|BD(d)|BD(D)|BD(p)IT(az)|BD(s)|BD(r)[IT(arg)|BD(x)]
Specify the vector transformation of interest.  Append BD(a) for average, BD(b) for the pole of the two points bisector,
BD(d) for dot product (use BD(D) to get angle in degrees between the two vectors), BD(p)IT(az) for the
pole to the great circle specified by input vector and IT(az) (no second vector used),
BD(r)IT(par) for vector rotation (here, IT(par) is a single angle for 2-D Cartesian data
and IT(lon/lat/angle) for a 3-D rotation pole and angle), BD(s) for vector sum, and BD(x) for cross-product.
If OPT(T) is not given then no transformation takes place; the output is determined by other options such as OPT(A),
OPT(C), OPT(E), and OPT(N).
#include "explain_-V.txt"
#include "explain_-bi.txt"
[Default is 2 or 3 input columns].
#include "explain_-f.txt"
#include "explain_-g.txt"
#include "explain_-h.txt"
#include "explain_-icols.txt"
#include "explain_-ocols.txt"
#include "explain_colon.txt"
#include "explain_help.txt"
#include "explain_precision.txt"
.SH EXAMPLES
Suppose you have a file with lon, lat called points.txt.  You want to compute the spherical angle between each
of these points and the location 133/34.  Try 
.br
.sp
gmtvector points.txt -S133/34 -TD -fg > angles.txt
.br 
.sp
To rotate the same points 35 degrees around a pole at 133/34, and output Cartesian 3-D vectors, use
.br
.sp
gmtvector points.txt -Tr133/34 -Co -fg > reconstructed.txt
.br 
.sp
To compute the cross-product between the two Cartesian vectors 0.5/1/2 and 1/0/0.4, and normalizing the result, try
.br
.sp
gmtvector -A0.5/1/2 -Tx -S1/0/0.4 -N -C > cross.txt
.br 
.sp
To rotate the 2-D vector, given in polar form as r = 2 and theta = 35, by an angle of 120, try
.br
.sp
gmtvector -A2/35 -Tr120 > rotated.txt
.br 
.sp
To find the mid-point along the great circle connecting the points 123/35 and -155/-30, use
.br
.sp
gmtvector -A123/35 -S-155/-30 -Ta -fg > midpoint.txt
.br
.sp
To find the mean location of the geographical points listed in points.txt, with its 99% confidence ellipse, use
.br
.sp
gmtvector points.txt -Am99 -fg > centroid.txt
.br 
.sp
To find the pole corresponding to the great circle that goes through the point -30/60 at an azimuth of 105 degrees, use
.br
.sp
gmtvector -A-30/60 -Tp105 -fg > pole.txt
.br 
.sp
.SH ROTATIONS
For more advanced 3-D rotations as used in plate tectonic reconstructions, see the GMT "spotter" supplement.
.SH "SEE ALSO"
.IR gmt (1),
.IR project (1),
.IR mapproject (1)
