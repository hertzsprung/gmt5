#include "common_options.txt"
.TH GRDFFT 1 MANDATE GMT_STRING "Generic Mapping Tools"
.SH NAME
grdfft \- Do mathematical operations on grids in the wavenumber (or frequency) domain 
.SH SYNOPSIS
BD(grdfft) IT(ingrid) OPT(G)IT(outgrid) [ OPT(A)IT(azimuth) ] 
[ OPT(C)IT(zlevel) ] [ OPT(D)[IT(scale)BD(|g)] ] [ OPT(E)[BD(x|y)][BD(w)] ] 
[ OPT(F)[BD(x)|BD(y)]IT(params) ] [ OPT(I)[IT(scale)BD(|g)] ] [ OPT(L) ] 
[ OPT(N)IT(stuff) ] [ OPT(S)IT(scale) ] [ OPT(T)IT(te/rl/rm/rw/ri) ] [ GMT_V_OPT ] [ GMT_f_OPT ]
.SH DESCRIPTION
BD(grdfft) will take the 2-D forward Fast Fourier Transform and perform one or more mathematical
operations in the frequency domain before transforming back to the space domain.  An option
is provided to scale the data before writing the new values to an output file.  The
horizontal dimensions of the grid are assumed to be in meters.  Geographical grids
may be used by specifying the OPT(f) option that scales degrees to meters.  If you
have grids with dimensions in km, you could change this to meters using BD(grdedit)
or scale the output with BD(grdmath).
#include "explain_commonitems.txt"
.SH REQUIRED ARGUMENTS
.TP
IT(ingrid)
2-D binary grid file to be operated on.
(See GRID FILE FORMATS below).
.TP
OPT(G)IT(outgrid)
Specify the name of the output grid file or the 1-D spectrum file (see OPT(E)).
(See GRID FILE FORMATS below).
.SH OPTIONAL ARGUMENTS
.TP
OPT(A)IT(azimuth)
Take the directional derivative in the IT(azimuth) direction measured in degrees CW from north.
.TP
OPT(C)IT(zlevel)
Upward (for IT(zlevel) > 0) or downward (for IT(zlevel) < 0) continue the field IT(zlevel) meters.
.TP
OPT(D)[IT(scale)BD(|g)]
Differentiate the field, i.e., take d(field)/dz.  This is equivalent to multiplying by kr in the frequency
domain (kr is radial wave number).  Append a scale to multiply by (kr * IT(scale)) instead.  Alternatively,
append BD(g) to indicate that your data are geoid heights in meters and output should be gravity anomalies in mGal. 
[Default is no scale].
.TP
OPT(E)[BD(x|y)][BD(w)]
Estimate power spectrum in the radial direction.  Place BD(x) or BD(y) immediately after OPT(E) to
compute the spectrum in the x or y direction instead.  No grid file is created; f (i.e., frequency or wave number),
power[f], and 1 standard deviation in power[f] are written to file set by OPT(G) [stdout].
Append BD(w) to write wavelength instead of frequency.
.TP
OPT(F)[BD(x)|BD(y)]IT(params)
Filter the data.  Place BD(x) or BD(y) immediately after OPT(F) to filter IT(x) or IT(y) direction only; default is isotropic.
Choose between a cosine-tapered band-pass, a Gaussian band-pass filter, or a Butterworth band-pass filter.
Cosine-taper: Specify four wavelengths IT(lc)/IT(lp)/IT(hp)/IT(hc) in correct units (see OPT(fg)) to design a bandpass filter: wavelengths greater than 
IT(lc) or less than IT(hc) will be cut, wavelengths greater than IT(lp) and less than IT(hp) will be 
passed, and wavelengths in between will be cosine-tapered.  E.g., OPT(F)1000000/250000/50000/10000 OPT(fg) 
will bandpass, cutting wavelengths > 1000 km and < 10 km, passing wavelengths between 250 km and 50 km.  To make 
a highpass or lowpass filter, give hyphens (-) for IT(hp)/IT(hc) or IT(lc)/IT(lp).  E.g., OPT(Fx)-/-/50/10 
will lowpass IT(x), passing wavelengths > 50 and rejecting wavelengths < 10.  OPT(Fy)1000/250/-/- will highpass IT(y), 
passing wavelengths < 250 and rejecting wavelengths > 1000.  Gaussian band-pass: Append IT(lo)/IT(hi), the two wavelengths in correct units
(see OPT(fg)) to design a bandpass filter.  At the given wavelengths the Gaussian filter weights will be 0.5. To make
a highpass or lowpass filter, give a hyphen (-) for the IT(hi) or IT(lo) wavelength, respectively.  E.g., OPT(F)-/30
will lowpass the data using a Gaussian filter with half-weight at 30, while OPT(F)400/- will highpass the data.
Butterworth band-pass: Append IT(lo)/IT(hi)/IT(order), the two wavelengths in correct units
(see OPT(fg)) and the filter order (an integer) to design a bandpass filter.  At the given wavelengths the Butterworth filter weights will be 0.5. To make
a highpass or lowpass filter, give a hyphen (-) for the IT(hi) or IT(lo) wavelength, respectively.  E.g., OPT(F)-/30/2
will lowpass the data using a 2nd-order Butterworth filter, with half-weight at 30, while OPT(F)400/-/2 will highpass the data.
.TP
OPT(I)[IT(scale)BD(|g)]
Integrate the field, i.e., compute integral_over_z (field * dz).  This is equivalent to divide by kr
in the frequency domain (kr is radial wave number).  Append a scale to divide by (kr * IT(scale)) instead.
Alternatively, append BD(g) to indicate that your data set is gravity anomalies in mGal and output should be geoid
heights in meters.  [Default is no scale].
.TP
OPT(L)
Leave trend alone.  By default, a linear trend will be removed prior to the transform.
.TP
OPT(N)IT(stuff)
Choose or inquire about suitable grid dimensions for FFT.
OPT(Nf) will force the FFT to use the dimensions of the data.
OPT(Nq) will inQuire about more suitable dimensions.
OPT(N)IT(nx/ny) will do FFT on array size IT(nx/ny) (Must be >= grid file size).
Default chooses dimensions >= data which optimize speed, accuracy of FFT.
If FFT dimensions > grid file dimensions, data are extended and tapered to zero.
.TP
OPT(S)IT(scale)
Multiply each element by IT(scale) in the space domain (after the frequency domain operations).
[Default is 1.0].
.TP
OPT(T)IT(te/rl/rm/rw/ri)
Compute the isostatic compensation from the topography load (input grid file) on an elastic plate
of thickness IT(te).  Also append densities for load, mantle, water, and infill in SI units.
If IT(te) == 0 then the Airy response is returned.  OPT(T) implicitly sets OPT(L).
#include "explain_-V.txt" 
#include "explain_help.txt"
#include "explain_grd_inout.txt"
.SH CONSIDERATIONS
netCDF COARDS grids will automatically be recognized as geographic. For other grids geographical grids
were you want to convert degrees into meters, select OPT(fg).  If the data are close to either pole,
you should consider projecting the grid file onto a rectangular coordinate system using BD(grdproject).
.SH EXAMPLES
To upward continue the sea-level magnetic anomalies in the file mag_0.nc to a level 800 m above sealevel:
.br
.sp
grdfft mag_0.nc -C800 -V -Gmag_800.nc 
.br
.sp
To transform geoid heights in m (geoid.nc) on a geographical grid to free-air gravity anomalies in mGal:
.br
.sp
grdfft geoid.nc -Dg -V -Ggrav.nc
.br
.sp
To transform gravity anomalies in mGal (faa.nc) to deflections of the vertical (in micro-radians) in the
038 direction, we must first integrate gravity to get geoid, then take the directional derivative, and
finally scale radians to micro-radians:
.br
.sp
grdfft faa.nc -Ig38 -S1e6 -V -Gdefl_38.nc
.br
.sp
Second vertical derivatives of gravity anomalies are related to the curvature of the field.  We can
compute these as mGal/m^2 by differentiating twice:
.br
.sp
grdfft gravity.nc -D -D -V -Ggrav_2nd_derivative.nc
.br
.sp
The first order gravity anomaly (in mGal) due to the compensating surface caused 
by the topography load topo.nc (in m) on a 20 km thick elastic plate, assumed to 
be 4 km beneath the observation level can be computed as
.br
.sp
grdfft topo.nc -T20000/2800/3330/1030/2300 -S0.022 -C4000 -Gcomp_faa.nc
.br
.sp
where 0.022 is the scale needed for the first term in Parker's expansion for\"'
computing gravity from topography (= 2 * PI * G * (rhom - rhol)).
.SH "SEE ALSO"
.IR gmt (1),
.IR grdedit (1),
.IR grdmath (1),
.IR grdproject (1)
